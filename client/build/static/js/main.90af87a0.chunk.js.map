{"version":3,"sources":["services/constants.js","components/auth/ProvideAuth.js","components/MessageComponent.js","pages/SignUp.js","services/listItems.js","pages/Dashboard.js","pages/SignIn.js","components/auth/PrivateRoute.js","services/authServices.js","services/validationFunctions.js","services/clubServices.js","components/club/ClubCard.js","pages/ClubGrid.js","pages/ClubForm.js","components/club/ClubInfo.js","services/userServices.js","components/user/UserList.js","services/eventServices.js","components/event/EventCard.js","components/event/EventList.js","pages/ClubData.js","services/resourceServices.js","pages/EventForm.js","components/event/EventInfo.js","components/event/RatingComponent.js","components/event/FeedbackCard.js","components/event/EventFeedbackList.js","pages/EventData.js","components/event/EventGrid.js","pages/UserEvents.js","App.js","reportWebVitals.js","index.js"],"names":["DB_URL","SIGNIN_URL","NEW_CLUB_URL","NEW_EVENT_URL","NEW_FEEDBACK","labels","0.5","1","1.5","2","2.5","3","3.5","4","4.5","5","AuthContext","createContext","ProvideAuth","children","useState","authState","setAuthState","loading","setLoading","user","setUser","getAuthentication","a","token","window","localStorage","getItem","userObj","JSON","parse","fetch","response","status","useEffect","Provider","value","authenticated","useStyles","makeStyles","theme","root","width","marginTop","spacing","MessageComponent","props","classes","messageContent","setMessagePopupState","React","open","setOpen","className","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","event","reason","message","Copyright","Typography","variant","color","align","Date","getFullYear","paper","backgroundColor","border","padding","boxShadow","borderRadius","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","history","useHistory","contextValue","useContext","email","password","credentialState","setCredentialState","messagePopupState","setMessage","formChangeHandler","fieldName","target","name","fieldValue","formSubmitHandler","preventDefault","apiParams","method","headers","body","stringify","ok","console","log","text","json","resp","setItem","setTimeout","push","Fragment","Container","component","maxWidth","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","Button","onClick","Grid","container","item","to","Box","mt","MainListItems","ListItem","button","Link","ListItemIcon","ListItemText","primary","role","secondaryListItems","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","fixedHeight","Dashboard","Component","CircularProgress","AppBar","clsx","Toolbar","IconButton","edge","aria-label","noWrap","removeItem","Drawer","Divider","List","palette","secondary","main","PrivateRoute","rest","render","location","pathname","state","from","getToken","isEmpty","str","length","isBlank","test","fetchClubList","data","saveClub","club","fetchClubDetails","clubId","url","enrollMemberInClub","userId","removeMemberFromClub","validateClubObject","desc","memberCapacity","clubType","errors","media","cursor","go_to","red","ClubCard","_id","redirectToClubsData","mediaImage","Card","CardHeader","CardMedia","image","CardContent","style","textAlign","CardActions","disableSpacing","size","createStyles","control","grid_card","ClubGrid","clubList","setClubList","styles","getClublist","justify","map","xs","md","minWidth","layout","buttons","formControl","ClubForm","members","otheClubType","events","clubState","setClubState","isUpdate","setIsUpdate","useParams","undefined","getClubDetails","otherClubType","finalClubType","redirectToDashboard","FormControl","InputLabel","Select","labelId","MenuItem","otherCategory","sm","bullet","transform","fontSize","pos","marginBottom","ClubInfo","fetchUserList","ids","background","inline","listItem","questionFieldStyling","UserList","userList","setUserList","success","getUser","titleText","ListItemAvatar","emptyText","saveEvent","formData","FormData","Headers","append","eventPoster","capacity","venue","fetchEventList","fetchEventDetails","registerUser","eventId","validateEventObject","getTime","getEventStatus","startDate","endDate","currentTime","startTime","endTime","sendUserFeedback","feedback","getUserFeedbackForEvent","getFeedbacksForEvent","validateFeedbackObject","comments","card","cardDetails","flex","cardMedia","cardAction","chip_start","chip_end","FeaturedPost","statusText","statusClass","startDateString","getDate","getMonth","getHours","getMinutes","toDate","toDateString","paragraph","Chip","Hidden","xsDown","EventList","eventList","setEventList","getData","buttonGroup","enrollButton","editButton","orgEventButton","ClubData","alert","enrollHandler","leaveClubHandler","clubButtonObj","includes","handler","startIcon","fetchResource","textField","input","EventForm","participants","eventState","setEventState","setImage","publicFiles","resourceResponse","path","getEventDetails","redirectToClub","src","alt","split","InputLabelProps","shrink","accept","URL","createObjectURL","files","htmlFor","EventInfo","borderColor","addHeight","buttonStyling","ratingStyling","textFieldStyling","ratingWidth","RatingComponent","hover","setHover","isFeedbackGiven","setIsFeedbackGiven","feedbackState","setFeedbackState","stars","getUserFeedback","submitUserFeedback","Rating","precision","newValue","onChangeActive","newHover","disabled","ml","multiline","rows","ratingValue","FeedbackCard","EventFeedbackList","feedbackList","setFeedbackList","getFeedbacks","rateEventButton","viewFeedbackButton","memberSection","EventData","imagePath","setImagePath","eventStatusState","setEventStatusState","ratingComponentState","setRatingComponentState","feedbackComponentState","setFeedbackComponentState","registerUserToEvent","EventGrid","redirectToEventData","UserEvents","registeredEvents","App","exact","SignUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"0YAAaA,EAAS,wBAETC,EAAaD,EAAS,eAKtBE,EAAeF,EAAS,QAMxBG,EAAgBH,EAAS,SAMzBI,EAAeJ,EAAS,kBAGxBK,EAAS,CAClBC,GAAK,UACLC,EAAG,WACHC,IAAK,OACLC,EAAG,QACHC,IAAK,KACLC,EAAG,MACHC,IAAK,OACLC,EAAG,QACHC,IAAK,YACLC,EAAG,c,OC7BMC,EAAeC,0BAkCbC,EA/BK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACFC,mBAAS,MADP,mBAC7BC,EAD6B,KAClBC,EADkB,OAERF,oBAAS,GAFD,mBAE7BG,EAF6B,KAEpBC,EAFoB,OAGZJ,mBAAS,MAHG,mBAG7BK,EAH6B,KAGvBC,EAHuB,KAK9BC,EAAiB,uCAAG,kCAAAC,EAAA,yDAClBC,EAAQC,OAAOC,aAAaC,QAAQ,SACpCC,EAAUH,OAAOC,aAAaC,QAAQ,QACtCP,EAAOS,KAAKC,MAAMF,IACrBJ,EAJqB,wBAKtBL,GAAW,GALW,SAMCY,MAAM,GAAD,ODdNpC,yCCcM,YAAoB6B,IAN1B,OAMhBQ,EANgB,OAOtBf,EAAiC,MAApBe,EAASC,QACtBZ,EAAQD,GACRD,GAAW,GATW,wBAYtBF,GAAa,GAZS,4CAAH,qDAmBvB,OAJAiB,qBAAU,WACRZ,MACA,IAGA,cAACX,EAAYwB,SAAb,CAAsBC,MAAO,CAACC,cAAerB,EAAWE,UAASD,eAAcG,OAAMC,WAArF,SACGP,K,SC1BDwB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,SAsChBC,EAjCU,SAAAC,GACvB,IAAMC,EAAUT,IACRU,EAAyCF,EAAzCE,eAAgBC,EAAyBH,EAAzBG,qBAFQ,EAIRC,IAAMnC,SAAS+B,EAAMK,MAJb,mBAIzBA,EAJyB,KAInBC,EAJmB,KAgBhC,OACE,qBAAKC,UAAWN,EAAQN,KAAxB,SACE,cAACa,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdN,KAAMA,EACNO,iBAAkB,IAClBC,QAlBc,SAACC,EAAOC,GACX,cAAXA,IAIJT,GAAQ,GACRH,GAAqB,KAajBa,QAASd,OCxBjB,SAASe,IACP,OACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,SAAxD,UACG,mBAIA,IAAIC,MAAOC,cACX,OAKP,IAAM/B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8B,MAAO,CACL3B,UAAWH,EAAMI,QAAQ,GACzB2B,gBAAiB,OACjBC,OAAQ,iBACRC,QAAS,OACTC,UAAW,mCACXC,aAAc,OACdC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQxC,EAAMI,QAAQ,GACtB2B,gBAAiB,SAEnBU,KAAM,CACJvC,MAAO,OACPC,UAAWH,EAAMI,QAAQ,IAE3BsC,OAAQ,CACNF,OAAQxC,EAAMI,QAAQ,EAAG,EAAG,GAC5B2B,gBAAiB,QACjB,UAAY,CAAEA,gBAAiB,kBAIpB,SAASY,IACtB,IAAMC,EAAUC,cACVC,EAAeC,qBAAW5E,GACxBM,EAA0BqE,EAA1BrE,aAAcI,EAAYiE,EAAZjE,QAChB0B,EAAUT,IAJe,EAKevB,mBAAS,CACrDyE,MAAO,GACPC,SAAU,KAPmB,mBAKxBC,EALwB,KAKPC,EALO,OASmB5E,oBAAS,GAT5B,mBASxB6E,EATwB,KASL3C,EATK,OAUAlC,mBAAS,IAVT,mBAUxB+C,EAVwB,KAUf+B,EAVe,KAYzBC,EAAoB,SAAAlC,GACxB,IAAMmC,EAAYnC,EAAMoC,OAAOC,KACzBC,EAAatC,EAAMoC,OAAO5D,MAChCuD,EAAmB,2BAAID,GAAL,kBAAuBK,EAAYG,MAGjDC,EAAiB,uCAAG,WAAMvC,GAAN,mBAAArC,EAAA,6DACxBqC,EAAMwC,iBACAC,EAAY,CAChBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM3E,KAAK4E,UAAUf,IAPC,SASD3D,MAAMnC,EAAYyG,GATjB,WASlBrE,EATkB,QAUX0E,GAVW,wBAWtBC,QAAQC,IAAI,kBAAmB5E,EAASC,QAXlB,KAYtB0E,QAZsB,UAYa3E,EAAS6E,OAZtB,yBAYdD,IAZc,UAYV,gBAZU,MAatBf,EAAW,wBACX5C,GAAqB,GAdC,yCAiBHjB,EAAS8E,OAjBN,QAiBhBC,EAjBgB,OAkBtBtF,OAAOC,aAAasF,QAAQ,QAASD,EAAKvF,OAG1CC,OAAOC,aAAasF,QAAQ,OAAQnF,KAAK4E,UAAUM,EAAK3F,OACxDH,GAAa,GACbI,EAAQ0F,EAAK3F,MACb6F,YAAW,WACT7B,EAAQ8B,KAAK,YACZ,KA1BmB,4CAAH,sDA+BvB,OACE,eAAC,IAAMC,SAAP,WACCvB,GAAqB,cAAC,EAAD,CAAkBzC,KAAMyC,EAAmB5C,eAAgBc,EAASb,qBAAsBA,IAChH,eAACmE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKlE,UAAWN,EAAQuB,MAAxB,UACE,cAACkD,EAAA,EAAD,CAAQnE,UAAWN,EAAQgC,OAA3B,SACE,cAAC,IAAD,MAEF,cAACf,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAnC,qBAGA,uBAAMZ,UAAWN,EAAQkC,KAAMwC,YAAU,EAAzC,UACE,cAACC,EAAA,EAAD,CACEzD,QAAQ,WACRe,OAAO,SACP2C,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACN7B,KAAK,QACL8B,aAAa,QACbC,WAAS,EACTC,SAAUnC,IAEZ,cAAC4B,EAAA,EAAD,CACEzD,QAAQ,WACRe,OAAO,SACP2C,UAAQ,EACRC,WAAS,EACT3B,KAAK,WACL6B,MAAM,WACNI,KAAK,WACLL,GAAG,WACHE,aAAa,mBACbE,SAAUnC,IAEZ,cAACqC,EAAA,EAAD,CACED,KAAK,SACLN,WAAS,EACT3D,QAAQ,YACRC,MAAM,UACNb,UAAWN,EAAQmC,OACnBkD,QAASjC,EANX,qBAUA,cAACkC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,IAAD,CAAMC,GAAI,UAAWvE,QAAQ,QAA7B,SACG,6CAMX,cAACwE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC3E,EAAD,Y,oNCxJK4E,GAAgB,SAAA7F,GAC3B,IACQ1B,EADQmE,qBAAW5E,GACnBS,KAER,OACE,gCACE,eAACwH,GAAA,EAAD,CAAUC,QAAM,EAACxB,UAAWyB,IAAMN,GAAI,SAAtC,UACE,cAACO,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,aAET,UAAd7H,EAAK8H,MACN,eAACN,GAAA,EAAD,CAAUC,QAAM,EAACxB,UAAWyB,IAAMN,GAAI,iBAAtC,UACE,cAACO,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,gBAET,gBAAd7H,EAAK8H,MACJ,eAACN,GAAA,EAAD,CAAUC,QAAM,EAACxB,UAAWyB,IAAMN,GAAI,eAAtC,UACE,cAACO,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,qBAoBnBE,GACX,wB,UClCI7G,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,KAAM,CACJmC,QAAS,QAEXwE,QAAS,CACPC,aAAc,QAEhBC,YAAY,aACV1E,QAAS,OACTE,WAAY,SACZyE,eAAgB,WAChB9E,QAAS,OACNjC,EAAMgH,OAAOJ,SAElBK,OAAQ,CACNC,OAAQlH,EAAMkH,OAAOC,OAAS,EAC9BC,WAAYpH,EAAMqH,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQvH,EAAMqH,YAAYE,OAAOC,MACjCC,SAAUzH,EAAMqH,YAAYI,SAASC,gBAEvC3F,gBAAiB,SAEnB4F,YAAa,CACXC,WAzBgB,IA0BhB1H,MAAM,eAAD,OA1BW,IA0BX,OACLkH,WAAYpH,EAAMqH,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQvH,EAAMqH,YAAYE,OAAOC,MACjCC,SAAUzH,EAAMqH,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,YAAa,GAEfC,iBAAkB,CAChB5F,QAAS,QAEX6F,MAAO,CACLC,SAAU,GAEZC,YAAa,CACXC,SAAU,WACVC,WAAY,SACZnI,MA5CgB,IA6ChBkH,WAAYpH,EAAMqH,YAAYC,OAAO,QAAS,CAC5CC,OAAQvH,EAAMqH,YAAYE,OAAOC,MACjCC,SAAUzH,EAAMqH,YAAYI,SAASI,iBAEvC9F,gBAAiB,QAEnBuG,kBAAgB,GACdC,UAAW,SACXnB,WAAYpH,EAAMqH,YAAYC,OAAO,QAAS,CAC5CC,OAAQvH,EAAMqH,YAAYE,OAAOC,MACjCC,SAAUzH,EAAMqH,YAAYI,SAASC,gBAEvCxH,MAAOF,EAAMI,QAAQ,IANP,cAObJ,EAAMwI,YAAYC,GAAG,MAAQ,CAC5BvI,MAAOF,EAAMI,QAAQ,KART,gCAUG,QAVH,GAYhBsI,aAAc1I,EAAMgH,OAAOJ,QAC3B+B,QAAS,CACPT,SAAU,EACVU,OAAQ,QACRC,SAAU,QAGZ/C,UAAW,CACTgD,WAAY9I,EAAMI,QAAQ,GAC1B2I,cAAe/I,EAAMI,QAAQ,IAE/B0B,MAAO,CACLG,QAASjC,EAAMI,QAAQ,GACvBgC,QAAS,OACTyG,SAAU,OACVxG,cAAe,UAEjB2G,YAAa,CACXJ,OAAQ,SAIG,SAASK,GAAU3I,GAChC,IAAMsC,EAAUC,cACVC,EAAeC,qBAAW5E,GACxBM,EAAyCqE,EAAzCrE,aAAcI,EAA2BiE,EAA3BjE,QAASD,EAAkBkE,EAAlBlE,KAAMF,EAAYoE,EAAZpE,QAClBwK,EAAc5I,EAAzBuE,UACFtE,EAAUT,KALuB,EAMfY,IAAMnC,UAAS,GANA,mBAMhCoC,EANgC,KAM1BC,EAN0B,KAqBvC,OACE,cAAC,IAAM+D,SAAP,UACGjG,EAAU,cAACyK,GAAA,EAAD,IACT,cAAC,IAAMxE,SAAP,UACE,sBAAK9D,UAAWN,EAAQN,KAAxB,UAEE,cAACmJ,EAAA,EAAD,CAAQhB,SAAS,WAAWvH,UAAWwI,YAAK9I,EAAQ0G,OAAQtG,GAAQJ,EAAQoH,aAA5E,SACE,eAAC2B,EAAA,EAAD,CAASzI,UAAWN,EAAQqG,QAA5B,UACE,cAAC2C,EAAA,EAAD,CACEC,KAAK,QACL9H,MAAM,UACN+H,aAAW,cACX7D,QA1BS,WACvBhF,GAAQ,IA0BMC,UAAWwI,YAAK9I,EAAQuH,WAAYnH,GAAQJ,EAAQyH,kBALtD,SAOE,cAAC,IAAD,MAEF,cAACxG,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAKC,MAAM,UAAUgI,QAAM,EAAC7I,UAAWN,EAAQ0H,MAAlF,iCAIA,eAACsB,EAAA,EAAD,CAAY7H,MAAM,UAAlB,UACE,cAAC,IAAD,IACA,eAACF,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAKC,MAAM,UAAUgI,QAAM,EAAC7I,UAAWN,EAAQ0H,MAAlF,oBACUrJ,EAAK6E,KADf,UAKF,cAAC8F,EAAA,EAAD,CAAY7H,MAAM,UAAUkE,QAnC3B,WACbnH,GAAa,GACbI,EAAQ,MACRI,OAAOC,aAAayK,WAAW,QAC/B1K,OAAOC,aAAayK,WAAW,SAC/B/G,EAAQ8B,KAAK,YA8BD,SACE,cAAClD,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAKC,MAAM,UAAUgI,QAAM,EAAC7I,UAAWN,EAAQ0H,MAAlF,2BAON,eAAC2B,EAAA,EAAD,CACEnI,QAAQ,YACRlB,QAAS,CACPuB,MAAOuH,YAAK9I,EAAQ4H,aAAcxH,GAAQJ,EAAQ+H,mBAEpD3H,KAAMA,EALR,UAOE,qBAAKE,UAAWN,EAAQuG,YAAxB,SACE,cAACyC,EAAA,EAAD,CAAY3D,QAvDA,WACxBhF,GAAQ,IAsDI,SACE,cAAC,IAAD,QAGJ,cAACiJ,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UAAO,cAAC,GAAD,MACP,cAACD,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UAAOnD,QAET,uBAAM9F,UAAWN,EAAQoI,QAAzB,UACE,qBAAK9H,UAAWN,EAAQmI,eACxB,cAAC9D,EAAA,EAAD,CAAWE,SAAS,KAAKjE,UAAWN,EAAQuF,UAA5C,SACE,cAACoD,EAAD,gBCrKhB,SAAS3H,KACP,OACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,SAAxD,UACG,mBAIA,IAAIC,MAAOC,cACX,OAKP,IAAM/B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8B,MAAO,CACL3B,UAAWH,EAAMI,QAAQ,GACzB2B,gBAAiB,OACjBC,OAAQ,iBACRC,QAAS,OACTC,UAAW,mCACXC,aAAc,OACdC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQxC,EAAMI,QAAQ,GACtB2B,gBAAiB/B,EAAM+J,QAAQC,UAAUC,MAE3CxH,KAAM,CACJvC,MAAO,OACPC,UAAWH,EAAMI,QAAQ,IAE3BsC,OAAQ,CACNF,OAAQxC,EAAMI,QAAQ,EAAG,EAAG,QAIjB,SAASuC,KACtB,IAAMC,EAAUC,cACVC,EAAeC,qBAAW5E,GACxBM,EAA0BqE,EAA1BrE,aAAcI,EAAYiE,EAAZjE,QAChB0B,EAAUT,KAJe,EAKevB,mBAAS,CACrDyE,MAAO,GACPC,SAAU,KAPmB,mBAKxBC,EALwB,KAKPC,EALO,OASmB5E,oBAAS,GAT5B,mBASxB6E,EATwB,KASL3C,EATK,OAUAlC,mBAAS,IAVT,mBAUxB+C,EAVwB,KAUf+B,EAVe,KAYzBC,EAAoB,SAAAlC,GACxB,IAAMmC,EAAYnC,EAAMoC,OAAOC,KACzBC,EAAatC,EAAMoC,OAAO5D,MAChCuD,EAAmB,2BAAID,GAAL,kBAAuBK,EAAYG,MAGjDC,EAAiB,uCAAG,WAAMvC,GAAN,mBAAArC,EAAA,6DACxBqC,EAAMwC,iBACAC,EAAY,CAChBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM3E,KAAK4E,UAAUf,IAPC,SASD3D,MAAMnC,EAAYyG,GATjB,WASlBrE,EATkB,QAUX0E,GAVW,wBAWtBC,QAAQC,IAAI,kBAAmB5E,EAASC,QAXlB,KAYtB0E,QAZsB,UAYa3E,EAAS6E,OAZtB,yBAYdD,IAZc,UAYV,gBAZU,MAatBf,EAAW,wBACX5C,GAAqB,GAdC,yCAiBHjB,EAAS8E,OAjBN,QAiBhBC,EAjBgB,OAkBtBtF,OAAOC,aAAasF,QAAQ,QAASD,EAAKvF,OAG1CC,OAAOC,aAAasF,QAAQ,OAAQnF,KAAK4E,UAAUM,EAAK3F,OACxDH,GAAa,GACbI,EAAQ0F,EAAK3F,MACb6F,YAAW,WACT7B,EAAQ8B,KAAK,YACZ,KA1BmB,4CAAH,sDA+BvB,OACE,eAAC,IAAMC,SAAP,WACCvB,GAAqB,cAAC,EAAD,CAAkBzC,KAAMyC,EAAmB5C,eAAgBc,EAASb,qBAAsBA,IAChH,eAACmE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKlE,UAAWN,EAAQuB,MAAxB,UACE,cAACkD,EAAA,EAAD,CAAQnE,UAAWN,EAAQgC,OAA3B,SACE,cAAC,IAAD,MAEF,cAACf,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAnC,qBAGA,uBAAMZ,UAAWN,EAAQkC,KAAMwC,YAAU,EAAzC,UACE,cAACC,EAAA,EAAD,CACEzD,QAAQ,WACRe,OAAO,SACP2C,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACN7B,KAAK,QACL8B,aAAa,QACbC,WAAS,EACTC,SAAUnC,IAEZ,cAAC4B,EAAA,EAAD,CACEzD,QAAQ,WACRe,OAAO,SACP2C,UAAQ,EACRC,WAAS,EACT3B,KAAK,WACL6B,MAAM,WACNI,KAAK,WACLL,GAAG,WACHE,aAAa,mBACbE,SAAUnC,IAEZ,cAACqC,EAAA,EAAD,CACED,KAAK,SACLN,WAAS,EACT3D,QAAQ,YACRC,MAAM,UACNb,UAAWN,EAAQmC,OACnBkD,QAASjC,EANX,qBAUA,cAACkC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,IAAD,CAAMC,GAAI,UAAWvE,QAAQ,QAA7B,SACG,6CAMX,cAACwE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,GAAD,Y,cCpIOgE,GAxBM,SAAC,GAAuC,IAA1BhB,EAAyB,EAApCrE,UAAyBsF,EAAW,8BACpDrH,EAAeC,qBAAW5E,GAChC,OACE,8BAE+B,MAA9B2E,EAAajD,eAAyBiD,EAAapE,QAAU,cAACyK,GAAA,EAAD,IAAuB,cAAC,IAAD,2BAC7EgB,GAD6E,IAEjFC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACNvH,EAAajD,cACX,cAACqJ,EAAD,IAEA,cAAC,IAAD,CACElD,GAAI,CACFsE,SAAU,UACVC,MAAO,CAAEC,KAAMH,a,UCnBlBI,GAAW,WACtB,OAAQxL,OAAOC,aAAaC,QAAQ,UCOzBuL,GAAU,SAAAC,GACrB,OAASA,GAAsB,IAAfA,EAAIC,QAGTC,GAAU,SAAAF,GACrB,OAASA,GAAO,QAAQG,KAAKH,ICTlBI,GAAa,uCAAG,kCAAAhM,EAAA,6DAErBC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,KAPG,SAUJO,MVRIpC,8BUQiB0G,GAVjB,cAUrBrE,EAVqB,gBAWRA,EAAS8E,OAXD,cAWrBC,EAXqB,yBAYpB,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IAdmB,2CAAH,qDAkBb0G,GAAQ,uCAAG,WAAMC,GAAN,qBAAAnM,EAAA,6DAChBC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,OAAU,mBACV,cAAgB,GAAhB,OAAoB/E,IAEtBgF,KAAM3E,KAAK4E,UAAUiH,IATD,SAWC3L,MAAMlC,EAAcwG,GAXrB,cAWhBrE,EAXgB,gBAYHA,EAAS8E,OAZN,cAYhBC,EAZgB,yBAaf,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IAfc,2CAAH,sDAmBR4G,GAAgB,uCAAG,WAAOC,GAAP,uBAAArM,EAAA,6DACxBC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,KAGlBqM,EATwB,UASfhO,EATe,YASC+N,GATD,SAUN7L,MAAM8L,EAAKxH,GAVL,cAUxBrE,EAVwB,gBAWXA,EAAS8E,OAXE,cAWxBC,EAXwB,yBAYvB,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IAdsB,4CAAH,sDAkBhB+G,GAAkB,uCAAG,WAAOC,EAAQH,GAAf,qBAAArM,EAAA,6DAC1BC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,IAEtBgF,KAAM3E,KAAK4E,UAAU,CAACsH,SAAQH,YARA,SAWT7L,MV9DMpC,oCU8DiB0G,GAXd,cAW1BrE,EAX0B,gBAYbA,EAAS8E,OAZI,cAY1BC,EAZ0B,yBAazB,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IAfwB,2CAAH,wDAmBlBiH,GAAoB,uCAAG,WAAOD,EAAQH,GAAf,qBAAArM,EAAA,6DAC5BC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,IAEtBgF,KAAM3E,KAAK4E,UAAU,CAACsH,SAAQH,YARE,SAUX7L,MV/EKpC,mCU+EiB0G,GAVX,cAU5BrE,EAV4B,gBAWfA,EAAS8E,OAXM,cAW5BC,EAX4B,yBAY3B,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IAd0B,2CAAH,wDAkBpBkH,GAAqB,SAAAP,GAAS,IAClCzH,EAAwCyH,EAAxCzH,KAAMiI,EAAkCR,EAAlCQ,KAAMC,EAA4BT,EAA5BS,eAAgBC,EAAYV,EAAZU,SAC7BC,EAAS,GAaf,OAZGnB,GAAQjH,IAASoH,GAAQpH,KAC1BoI,EAAOnH,KAAK,yBAEXgG,GAAQgB,IAASb,GAAQa,KAC1BG,EAAOnH,KAAK,+BAEXiH,GAAkB,IACnBE,EAAOnH,KAAK,4CAEXgG,GAAQkB,IAAaf,GAAQe,KAC9BC,EAAOnH,KAAK,6BAEPmH,G,gFChGH/L,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJuC,OAAQ,OACRL,aAAc,OACdiF,WAAY,OACZlF,UAAW,mCACX,UAAW,CACTA,UAAW,0CAGf4J,MAAO,CACLlD,OAAQ,EACRE,WAAY,SACZ,UAAW,CACTiD,OAAQ,YAGZC,MAAO,CACLpE,WAAY,OACZ5F,OAAQ,qBACRN,MAAO,YAETa,OAAQ,CACNR,gBAAiBkK,KAAI,KACrBlE,YAAa,KAEfE,MAAO,CACL7F,QAAS,YA4EE8J,GAxEE,SAAA5L,GACf,IAAMsC,EAAUC,cACVtC,EAAUT,KAFQ,EAGcQ,EAAM4K,KAApCzH,EAHgB,EAGhBA,KAAMiI,EAHU,EAGVA,KAAMS,EAHI,EAGJA,IAEdC,EAAsB,WAC1B3H,YAAW,WACT7B,EAAQ8B,KAAR,gBAAsByH,MACrB,MAGDE,EAAa,GACjB,OAZwB,EAGCT,UAUvB,IAAK,QACDS,EAAa,2GACb,MACJ,IAAK,SACHA,EAAa,uGACb,MACF,IAAK,aACHA,EAAa,uGACb,MACF,IAAK,MACHA,EAAa,sGACb,MACF,QACEA,EAAa,yJAMjB,OACE,cAACpG,EAAA,EAAD,CAAKpF,UAAWN,EAAQN,KAAxB,SACE,eAACqM,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEhM,QAAS,CAAE0H,MAAO1H,EAAQ0H,OAC1B1F,OACE,cAACyC,EAAA,EAAD,CAAQyE,aAAW,SAAS5I,UAAWN,EAAQgC,OAA/C,SACGkB,EAAK,KAGVwE,MAAOxE,IAET,cAAC+I,GAAA,EAAD,CACE3L,UAAWN,EAAQuL,MACnBW,MAAOJ,EACPpE,MAAM,OACNrC,QAASwG,IAGX,cAACM,GAAA,EAAD,CAAaC,MAAO,CAAEC,UAAW,QAAjC,SACE,cAACpL,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,gBAAgBmD,UAAU,IAAzD,SACG6G,MAGL,cAACmB,GAAA,EAAD,CAAaC,gBAAc,EAA3B,SACE,cAACvD,EAAA,EAAD,CACEE,aAAW,aACX5I,UAAWN,EAAQyL,MACnBtK,MAAM,YACNqL,KAAK,SACLnH,QAASwG,EALX,SAOE,cAAC,KAAD,cCtGNtM,GAAYC,aAAW,SAACC,GAAD,OAC3BgN,aAAa,CACX/M,KAAM,CACJiI,SAAU,EACV9F,QAAS,OACT2E,eAAgB,UAElBkG,QAAS,CACPhL,QAASjC,EAAMI,QAAQ,IAEzB8M,UAAW,CACTjL,QAAS,aAKA,SAASkL,KAAY,IAAD,EACD5O,mBAAS,IADR,mBAC1B6O,EAD0B,KAChBC,EADgB,OAEH9O,oBAAS,GAFN,mBAE1BG,EAF0B,KAEjBC,EAFiB,OAGiBJ,oBAAS,GAH1B,mBAG1B6E,EAH0B,KAGP3C,EAHO,OAIHlC,mBAAS,IAJN,mBAI1B+C,EAJ0B,KAIjB+B,EAJiB,KAO3BiK,EAASxN,KAoBf,OAjBAJ,qBAAU,WAAM,4CACd,4BAAAX,EAAA,sEACyBgM,KADzB,OAE0B,OADlBvL,EADR,QAEeC,QACX4N,EAAY7N,EAASwL,KAAKA,MAC1BrM,GAAW,IAEgB,MAApBa,EAASC,SAChB0E,QAAQC,IAAI5E,EAASwL,KAAKa,QAC1BxI,EAAW,yBACX5C,GAAqB,GACrB9B,GAAW,IAVf,4CADc,uBAAC,WAAD,wBAcd4O,KACC,IAGD,8BACG7O,EACC,cAACyK,GAAA,EAAD,IAEA,qCACG/F,GAAqB,cAAC,EAAD,CAAkBzC,KAAMyC,EAAmB5C,eAAgBc,EAASb,qBAAsBA,IAChH,8BACE,cAACoF,EAAA,EAAD,CAEEhF,UAAWyM,EAAOrN,KAClB6F,WAAS,EAAC0H,QAAQ,SAHpB,SAKGJ,EAASK,KAAI,SAACvC,GACb,OACE,cAACrF,EAAA,EAAD,CAAuCE,MAAI,EAAC2H,GAAI,GAAIC,GAAI,EAAxD,SACE,qBAAK9M,UAAWyM,EAAOJ,UAAvB,SAGE,cAAC,GAAD,CAAUhC,KAAMA,KAFXA,EAAK7F,KAFd,oBAAwB6F,EAAI,UAN5B,oB,4CCtCZpL,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiH,OAAQ,CACNmB,SAAU,YAEZnI,KAAM,CACJ2N,SAAU,KAEZC,OAAO,aACL3N,MAAO,OACP0H,WAAY5H,EAAMI,QAAQ,GAC1BD,UAAWH,EAAMI,QAAQ,GACzB2H,YAAa/H,EAAMI,QAAQ,IAC1BJ,EAAMwI,YAAYC,GAAG,IAAyB,EAAnBzI,EAAMI,QAAQ,IAAU,CAClDF,MAAO,IACP0H,WAAY,OACZG,YAAa,SAGjB+F,QAAS,CACP1L,QAAS,OACT2E,eAAgB,YAElBV,OAAQ,CACNlG,UAAWH,EAAMI,QAAQ,GACzBwH,WAAY5H,EAAMI,QAAQ,IAE5B2N,YAAa,CACXvL,OAAQxC,EAAMI,QAAQ,GACtBwN,SAAU,SAkOCI,GA5NE,SAAA1N,GACf,IAAMsC,EAAUC,cACVtC,EAAUT,KAFQ,EAGUvB,mBAAS,CACzCkF,KAAM,GACNiI,KAAM,GACNC,eAAgB,KAChBC,SAAU,GACVqC,QAAS,GACTC,aAAc,GACdC,OAAQ,KAVc,mBAGjBC,EAHiB,KAGNC,EAHM,OAY0B9P,oBAAS,GAZnC,mBAYjB6E,EAZiB,KAYE3C,EAZF,OAaMlC,mBAAS,IAbf,mBAajB+C,EAbiB,KAaR+B,EAbQ,OAcQ9E,oBAAS,GAdjB,mBAcjB+P,EAdiB,KAcPC,EAdO,OAeMhQ,oBAAS,GAff,mBAejBG,EAfiB,KAeRC,EAfQ,KAiBhB0G,EAAOmJ,cAAPnJ,GAGR3F,qBAAU,WAkBG,QAAP2F,GAAuB,OAAPA,QAAsBoJ,IAAPpJ,GAA2B,KAAPA,GAjBnC,uCAAG,4BAAAtG,EAAA,6DACrBJ,GAAW,GADU,SAEEwM,GAAiB9F,GAFnB,OAGG,OADlB7F,EAFe,QAGRC,QACX4O,EAAa7O,EAASwL,KAAKA,MAC3BrM,GAAW,IAEgB,MAApBa,EAASC,QAChB4D,EAAW7D,EAASwL,KAAK1J,SACzBb,GAAqB,IAEK,MAApBjB,EAASC,SACf0E,QAAQC,IAAI5E,EAASwL,KAAKa,QAC1BxI,EAAW,yBACX5C,GAAqB,IAdF,2CAAH,oDAkBlBiO,CAAerJ,GACfkJ,GAAY,IAGZ5P,GAAW,KAEZ,IAIH,IAAM2E,EAAoB,SAAAlC,GACxB,IAAMmC,EAAYnC,EAAMoC,OAAOC,KACzBC,EAAatC,EAAMoC,OAAO5D,MAChCyO,EAAa,2BAAKD,GAAN,kBAAkB7K,EAAYG,MAGtCC,EAAiB,uCAAG,WAAMvC,GAAN,iCAAArC,EAAA,yDAChB0E,EAAiE2K,EAAjE3K,KAAMiI,EAA2D0C,EAA3D1C,KAAMC,EAAqDyC,EAArDzC,eAAgBC,EAAqCwC,EAArCxC,SAAUqC,EAA2BG,EAA3BH,QAASU,EAAkBP,EAAlBO,cAGrDC,GADG/D,GAAQe,IAAalB,GAAQkB,KAAgC,KAAlB+C,EAC9BA,EAGA/C,EAUI,KADhBC,EAASJ,GAPTP,EAAO,CACXzH,OACAiI,OACAC,iBACAC,SAAUgD,EACVX,aAGSrD,OAjBa,wBAkBnB0D,IACDpD,EAAI,IAAU7F,GAnBM,SAqBC4F,GAASC,GArBV,OAsBE,OADlB1L,EArBgB,QAsBTC,QACX0E,QAAQC,IAAI,6BACZf,EAAW,6BACX5C,GAAqB,GACrBoO,KAE0B,MAApBrP,EAASC,SACf0E,QAAQC,IAAI5E,EAASwL,KAAKa,QAC1BxI,EAAW,yBACX5C,GAAqB,IA/BD,wBAmCtB0D,QAAQC,IAAIyH,EAAO,IACnBxI,EAAWwI,EAAO,IAClBpL,GAAqB,GArCC,4CAAH,sDAyCjBoO,EAAsB,WAC1BpK,YAAW,WACT7B,EAAQ8B,KAAK,YACZ,MASGjB,EAAyC2K,EAAzC3K,KAAMiI,EAAmC0C,EAAnC1C,KAAMC,EAA6ByC,EAA7BzC,eAAgBC,EAAawC,EAAbxC,SACpC,OACE,cAAC,IAAMjH,SAAP,UACGjG,EAAU,cAACyK,GAAA,EAAD,IACT,gCACG/F,GAAsB,cAAC,EAAD,CAAkBzC,KAAMyC,EAAmB5C,eAAgBc,EAASb,qBAAsBA,IACnH,sBAAMI,UAAWN,EAAQsN,OAAzB,SACE,eAACvB,GAAA,EAAD,CAAMzL,UAAWN,EAAQN,KAAMwB,QAAQ,WAAvC,UACE,eAACiL,GAAA,EAAD,WACE,cAAClL,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAKE,MAAM,SAASD,MAAM,UAA7D,mBACM4M,EAAW,SAAU,MAD3B,WAGA,eAACzI,EAAA,EAAD,CAAMC,WAAS,EAAC1F,QAAS,EAAzB,UACE,cAACyF,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAACxI,EAAA,EAAD,CACEC,UAAQ,EACRvF,MAAO6D,EACP4B,GAAG,OACH5B,KAAK,OACL6B,MAAM,YACNF,WAAS,EACTG,aAAa,aACbE,SAAUnC,MAGd,cAACuC,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAACxI,EAAA,EAAD,CACEC,UAAQ,EACRvF,MAAO8L,EACPrG,GAAG,OACH5B,KAAK,OACL6B,MAAM,cACNF,WAAS,EACTG,aAAa,yBACbE,SAAUnC,MAGd,cAACuC,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAACxI,EAAA,EAAD,CACEtF,MAAO+L,EACPtG,GAAG,WACH5B,KAAK,iBACL6B,MAAM,kBACNF,WAAS,EACTG,aAAa,yBACbE,SAAUnC,MAGd,cAACuC,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,eAACoB,GAAA,EAAD,CAAajO,UAAWN,EAAQwN,YAAa3I,WAAS,EAAtD,UACE,cAAC2J,GAAA,EAAD,CAAY1J,GAAG,2BAAf,kBACA,eAAC2J,GAAA,EAAD,CACEC,QAAQ,2BACR5J,GAAG,qBACHzF,MAAOgM,EACPnG,SAAUnC,EACVG,KAAK,WACL5C,UAAWN,EAAQwN,YANrB,UAQE,cAACmB,GAAA,EAAD,CAAUtP,MAAO,OAAjB,kBACA,cAACsP,GAAA,EAAD,CAAUtP,MAAO,MAAjB,iBACA,cAACsP,GAAA,EAAD,CAAUtP,MAAO,SAAjB,oBACA,cAACsP,GAAA,EAAD,CAAUtP,MAAO,QAAjB,mBACA,cAACsP,GAAA,EAAD,CAAUtP,MAAO,OAAjB,kBACA,cAACsP,GAAA,EAAD,CAAUtP,MAAO,aAAjB,6BACA,cAACsP,GAAA,EAAD,CAAUtP,MAAO,QAAjB,sBAE2B,UAA5BwO,EAAUO,cACT,cAACzJ,EAAA,EAAD,CACEM,WAAS,EACThD,OAAO,QACP4C,WAAS,EACTxF,MAAOwO,EAAUe,cACjB1L,KAAK,gBACL6B,MAAM,WACND,GAAG,iBACHF,UAAQ,IAER,gBAKZ,eAAC0H,GAAA,EAAD,WACE,cAAChH,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAI0B,GAAI,EAAvB,SACE,eAACzJ,EAAA,EAAD,CACElE,QAAQ,YACRmE,QAAS0I,EA7FF,WACrB7J,YAAW,WACT7B,EAAQ8B,KAAR,gBAAsB0J,EAAS,QAC9B,MA0FgDS,EAFvC,+BAIcP,EAAW,OAAS,kBAGpC,cAACzI,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAI0B,GAAI,EAAvB,SACE,cAACzJ,EAAA,EAAD,CACElE,QAAQ,YACRC,MAAM,UACNkE,QAASjC,EAHX,oCC3PV7D,GAAYC,YAAW,CAC3BE,KAAM,CACJ2M,UAAW,SACX1K,UACE,+GAEJmN,OAAQ,CACNjN,QAAS,eACTI,OAAQ,QACR8M,UAAW,cAEbrH,MAAO,CACLsH,SAAU,IAEZC,IAAK,CACHC,aAAc,MAwCHC,GApCE,SAAApP,GACf,IAAMC,EAAUT,KACRoL,EAAS5K,EAAT4K,KAER,OACE,cAAC,IAAMvG,SAAP,UACE,cAAC2H,GAAA,EAAD,CAAMzL,UAAWN,EAAQN,KAAMwB,QAAQ,WAAvC,SACE,eAACiL,GAAA,EAAD,WACE,cAAClL,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAKC,MAAM,UAA9C,SACGwJ,EAAKzH,MADoD,QAG5D,cAACjC,EAAA,EAAD,CACEC,QAAQ,KACRoD,UAAU,IAEVnD,MAAM,YACNb,UAAWN,EAAQiP,IALrB,SAOGtE,EAAKQ,MAJF,QAMN,eAAClK,EAAA,EAAD,CACEC,QAAQ,KACRkL,MAAO,CAAEjL,MAAO,iBAFlB,wBAKcwJ,EAAKS,iBAFb,kBAIN,eAACnK,EAAA,EAAD,CAAYC,QAAQ,KAAKkL,MAAO,CAAEjL,MAAO,iBAAzC,UACE,yCADF,IACkB,4BAAIwJ,EAAK+C,QAAQrD,oB,UClDhC+E,GAAa,uCAAG,WAAMC,GAAN,qBAAA7Q,EAAA,6DACrBC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,IAEtBgF,KAAM3E,KAAK4E,UAAU,CAAC2L,SARG,SAUJrQ,MfFIpC,sCeEiB0G,GAVjB,cAUrBrE,EAVqB,gBAWRA,EAAS8E,OAXD,cAWrBC,EAXqB,yBAYpBA,GAZoB,2CAAH,sDCapBzE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ6E,SAAU,QACV/C,gBAAiB/B,EAAM+J,QAAQ8F,WAAW/N,MAC1CU,OAAQ,OACRL,aAAc,OACdF,QAAS,OACTC,UAAW,kCACXE,QAAS,cACTE,WAAY,UAEdwN,OAAQ,CACN1N,QAAS,UAEXG,OAAQ,CACNR,gBAAiBkK,KAAI,MAEvB8D,SAAU,CACR7N,UAAW,+GAEb8N,qBAAsB,CACpBxN,OAAQ,aACRd,MAAO,eA8DIuO,GAzDE,SAAA3P,GACf,IAAMC,EAAUT,KACR8P,EAAQtP,EAARsP,IAFgB,EAGQrR,qBAHR,mBAGjB2R,EAHiB,KAGPC,EAHO,OAIM5R,oBAAS,GAJf,mBAIjBG,EAJiB,KAIRC,EAJQ,KAoBxB,OAdAe,qBAAU,YACK,uCAAG,4BAAAX,EAAA,6DACdJ,GAAW,GADG,SAESgR,GAAcC,GAAO,IAF9B,QAGW,KADnBpQ,EAFQ,QAGD4Q,SACXD,EAAY3Q,EAASwL,MACrBrM,GAAW,IAGXwF,QAAQC,IAAI,QAAS5E,EAASqM,QARlB,2CAAH,qDAWbwE,KACC,CAACT,IAEF,cAAC,IAAMjL,SAAP,UACGjG,EAAU,cAACyK,GAAA,EAAD,IACT,eAACmD,GAAA,EAAD,CAAMzL,UAAYN,EAAQwP,SAA1B,UACE,cAACxD,GAAA,EAAD,CACEtE,MAAO3H,EAAMgQ,YAEdJ,EAAStF,OAAS,EACjB,cAACd,EAAA,EAAD,UACCoG,EAASzC,KAAI,SAAA7O,GACZ,OACI,eAACwH,GAAA,EAAD,CAAUvF,UAAWN,EAAQN,KAAMqC,WAAW,aAA9C,UACE,cAACiO,GAAA,EAAD,UACE,cAACvL,EAAA,EAAD,CAAQyE,aAAW,SAAS5I,UAAWN,EAAQgC,OAA/C,SACG3D,EAAK6E,KAAK,OAGf,cAAC+C,GAAA,EAAD,CACEC,QAAS7H,EAAK6E,SAP8C7E,EAAI,UAc1E,qBAAKiC,UAAWN,EAAQyP,qBAAxB,SACI,cAACxO,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAnC,SACGnB,EAAMkQ,WADmC,gBCtE/CC,GAAS,uCAAG,WAAMrP,GAAN,yCAAArC,EAAA,6DACjBC,EAAQyL,KACRiG,EAAW,IAAIC,UACf5M,EAAU,IAAI6M,SACZC,OAAO,gBAAf,UAAmC7R,IAC3ByE,EAA+DrC,EAA/DqC,KAAMiI,EAAyDtK,EAAzDsK,KAAMlB,EAAmDpJ,EAAnDoJ,KAAMxE,EAA6C5E,EAA7C4E,GAAI8K,EAAyC1P,EAAzC0P,YAAaC,EAA4B3P,EAA5B2P,SAAU3F,EAAkBhK,EAAlBgK,OAAQ4F,EAAU5P,EAAV4P,MAC7DN,EAASG,OAAO,OAAQC,GACxBJ,EAASG,OAAO,OAAQpN,GACxBiN,EAASG,OAAO,SAAUzF,GAC1BsF,EAASG,OAAO,OAAQnF,GACxBgF,EAASG,OAAO,OAAQrG,GACxBkG,EAASG,OAAO,KAAM7K,GACtB0K,EAASG,OAAO,WAAYE,GAC5BL,EAASG,OAAO,QAASG,GACrB5P,EAAK,KACPsP,EAASG,OAAO,MAAOzP,EAAK,KAExByC,EAAY,CAChBC,OAAQ,OACRC,UACAC,KAAM0M,GApBe,UAsBAnR,MAAMjC,EAAeuG,GAtBrB,eAsBjBrE,EAtBiB,iBAuBJA,EAAS8E,OAvBL,eAuBjBC,EAvBiB,yBAwBhB,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IA1Be,4CAAH,sDA8BT0M,GAAc,uCAAG,WAAMrB,GAAN,qBAAA7Q,EAAA,6DACtBC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,IAEtBgF,KAAM3E,KAAK4E,UAAU,CAAE2L,SARG,SAULrQ,MjB7CKpC,oCiB6CiB0G,GAVjB,cAUtBrE,EAVsB,gBAWTA,EAAS8E,OAXA,cAWtBC,EAXsB,yBAYrB,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IAdoB,2CAAH,sDAkBd2M,GAAiB,uCAAG,WAAM7L,GAAN,uBAAAtG,EAAA,6DACzBC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,KAGlBqM,EATyB,UAShB/N,EATgB,YASC+H,GATD,SAUR9F,MAAM8L,EAAKxH,GAVH,cAUzBrE,EAVyB,gBAWZA,EAAS8E,OAXG,cAWzBC,EAXyB,yBAYxB,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IAduB,4CAAH,sDAkBjB4M,GAAY,uCAAG,WAAO5F,EAAQ6F,GAAf,qBAAArS,EAAA,6DACpBC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,IAEtBgF,KAAM3E,KAAK4E,UAAU,CAAEsH,SAAQ6F,aARP,SAUH7R,MjBhFSpC,uCiBgFiB0G,GAVvB,cAUpBrE,EAVoB,gBAWPA,EAAS8E,OAXF,cAWpBC,EAXoB,yBAYnB,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IAdkB,2CAAH,wDAkBZ8M,GAAsB,SAAAjQ,GAAU,IACnCqC,EAA0CrC,EAA1CqC,KAAMiI,EAAoCtK,EAApCsK,KAAMqF,EAA8B3P,EAA9B2P,SAAUvG,EAAoBpJ,EAApBoJ,KAAMxE,EAAc5E,EAAd4E,GAAIgL,EAAU5P,EAAV4P,MAClCnF,EAAS,KACXhB,GAAQpH,IAASiH,GAAQjH,KAC3BoI,EAAOnH,KAAK,yBAEVmG,GAAQa,IAAShB,GAAQgB,KAC3BG,EAAOnH,KAAK,gCAEVmG,GAAQmG,IAAUtG,GAAQsG,KAC5BnF,EAAOnH,KAAK,yBAEVqM,GAAY,GACdlF,EAAOnH,KAAK,mCAETsB,GAAOwE,GAIU,IAAI5I,KAAKoE,GAAIsL,UACX,IAAI1P,KAAK4I,GAAM8G,WAEnCzF,EAAOnH,KAAK,iCANdmH,EAAOnH,KAAK,yBASd,OAAOmH,GAII0F,GAAiB,SAACC,EAAWC,GACxC,IAAMC,GAAc,IAAI9P,MAAO0P,UACzBK,EAAY,IAAI/P,KAAK4P,GAAWF,UAChCM,EAAU,IAAIhQ,KAAK6P,GAASH,UAClC,OAAII,EAAc,MAAWC,GAAaD,EAAc,KAAUE,EACzD,EAGAF,EAAc,KAAUC,GACvB,EAGDD,EAAcE,EACd,EAGAF,EAAcC,GAAaD,EAAcE,EACzC,OADJ,GAKMC,GAAgB,uCAAG,WAAMC,GAAN,qBAAA/S,EAAA,6DACxBC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,IAEtBgF,KAAM3E,KAAK4E,UAAU6N,IARO,SAUPvS,MAAMhC,EAAcsG,GAVb,cAUxBrE,EAVwB,gBAWXA,EAAS8E,OAXE,cAWxBC,EAXwB,yBAYvB,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IAdsB,2CAAH,sDAmBhBwN,GAAuB,uCAAG,WAAMxG,EAAQ6F,GAAd,uBAAArS,EAAA,6DAC/BC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,KAGlBqM,EAT+B,UAStB9N,EATsB,YASNgO,EATM,YASI6F,GATJ,SAUd7R,MAAM8L,EAAKxH,GAVG,cAU/BrE,EAV+B,gBAWlBA,EAAS8E,OAXS,cAW/BC,EAX+B,yBAY9B,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IAd6B,4CAAH,wDAkBvByN,GAAoB,uCAAG,WAAMZ,GAAN,uBAAArS,EAAA,6DAC5BC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,KAGlBqM,EAT4B,UASnB9N,EATmB,YASH6T,GATG,SAUX7R,MAAM8L,EAAKxH,GAVA,cAU5BrE,EAV4B,gBAWfA,EAAS8E,OAXM,cAW5BC,EAX4B,yBAY3B,CACL9E,OAAQD,EAASC,OACjBuL,KAAMzG,IAd0B,4CAAH,sDAkBpB0N,GAAyB,SAAAH,GAAa,IAE3CjG,EAAS,GAIf,OALqBiG,EAAbI,SAEItH,OAAO,KACjBiB,EAAOnH,KAAK,2CAEPmH,G,oBC1MH/L,GAAYC,YAAW,CAC3BoS,KAAM,CACJ/P,QAAS,OACTJ,OAAQ,iBACRQ,OAAQ,WACRN,UAAW,QAEbkQ,YAAa,CACXC,KAAM,EACNjQ,QAAS,OACTwK,UAAW,OACX7F,eAAgB,cAElBuL,UAAW,CACTpS,MAAO,KAETqS,WAAY,CACV,SAAU,CACRxQ,gBAAiB,gBAGrByQ,WAAY,CACVzQ,gBAAiB,QACjB0N,aAAc,QAEhBgD,SAAU,CACR1Q,gBAAiB,MACjB0N,aAAc,UAIH,SAASiD,GAAapS,GACnC,IAAMC,EAAUT,KACRsB,EAAUd,EAAVc,MACAqC,EAAmCrC,EAAnCqC,KAAMiI,EAA6BtK,EAA7BsK,KAAMqF,EAAuB3P,EAAvB2P,SAAUvG,EAAapJ,EAAboJ,KAAMxE,EAAO5E,EAAP4E,GAC9BvG,EAAS8R,GAAe/G,EAAMxE,GAChC2M,EAAa,WACfC,EAAyB,IAAXnT,EAAec,EAAQkS,SAAWlS,EAAQiS,WAE3C,IAAX/S,EAAckT,EAAa,WACX,IAAXlT,IAAckT,EAAa,SACpC,IAAMnB,EAAY,IAAI5P,KAAK4I,GACrBqI,EAAe,UAAMrB,EAAUsB,UAAhB,YAA6BtB,EAAUuB,WAAvC,YAAqDvB,EAAU3P,cAA/D,YAAgF2P,EAAUwB,WAA1F,YAAwGxB,EAAUyB,cAEjIC,EAAS,IAAItR,KAAKoE,GAClBmN,EAAY,UAAMD,EAAOJ,UAAb,YAA0BI,EAAOH,WAAjC,YAA+CG,EAAOrR,cAAtD,YAAuEqR,EAAOF,WAA9E,YAA4FE,EAAOD,aAAnG,KAElB,OACE,cAACpN,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAACuG,GAAA,EAAD,CAAMzL,UAAWN,EAAQ4R,KAAzB,UACE,qBAAKtR,UAAWN,EAAQ6R,YAAxB,SACE,eAAC1F,GAAA,EAAD,WACE,cAAClL,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAnC,SACGgC,IAEH,eAACjC,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,gBAAtC,UACGmR,EADH,OACwBM,KAExB,eAAC3R,EAAA,EAAD,CAAYC,QAAQ,YAAY2R,WAAS,EAAzC,UACG1H,EACD,uBAFF,aAGaqF,KAEb,cAACsC,GAAA,EAAD,CACE3R,MAAM,YACNqL,KAAK,QACLzH,MAAOqN,EACP9R,UAAW+R,SAIjB,cAACU,GAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAAC/G,GAAA,EAAD,CACE3L,UAAWN,EAAQ+R,UACnB7F,MAAM,yKACNxE,MAAOxE,WCvEnB,IAAM3D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmS,KAAM,CACJjQ,UAAW,+GAEbjC,KAAM,CACJuC,OAAQ,QAEVsN,OAAQ,CACN1N,QAAS,UAEXG,OAAQ,CACNR,gBAAiBkK,KAAI,MAEvB+D,qBAAsB,CACpBxN,OAAQ,aACRd,MAAO,eAwEI8R,GAnEG,SAAAlT,GAChB,IAAMC,EAAUT,KACV8C,EAAUC,cACR+M,EAAQtP,EAARsP,IAHiB,EAISrR,qBAJT,mBAIlBkV,EAJkB,KAIPC,EAJO,OAKKnV,oBAAS,GALd,mBAKlBG,EALkB,KAKTC,EALS,OAMyBJ,oBAAS,GANlC,mBAMlB6E,EANkB,KAMC3C,EAND,OAOKlC,mBAAS,IAPd,mBAOlB+C,EAPkB,KAOT+B,EAPS,KASzB3D,qBAAU,YACK,uCAAG,4BAAAX,EAAA,6DACdJ,GAAW,GADG,SAESsS,GAAerB,GAAO,IAF/B,OAGU,OADlBpQ,EAFQ,QAGDC,QACXiU,EAAalU,EAASwL,KAAKA,MAC3BrM,GAAW,IAEgB,MAApBa,EAASC,SAChB0E,QAAQC,IAAI5E,EAASwL,KAAKa,OAAO,IACjCxI,EAAW,yBACXA,GAAW,IAVC,2CAAH,qDAabsQ,KACC,CAAC/D,IAMJ,OACE,cAAC,IAAMjL,SAAP,UACGjG,EAAU,cAACyK,GAAA,EAAD,IACT,gCACG/F,GAAqB,cAAC,EAAD,CAAkBzC,KAAMyC,EAAmB5C,eAAgBc,EAASb,qBAAsBA,IAChH,eAAC6L,GAAA,EAAD,CAAMzL,UAAWN,EAAQ4R,KAAzB,UACE,cAAC5F,GAAA,EAAD,CACEtE,MAAM,WAEPwL,EAAU7I,OAAS,EAClB,cAACd,EAAA,EAAD,CAAMjJ,UAAWN,EAAQN,KAAzB,SACGwT,EAAUhG,KAAI,SAAArM,GACb,OAEE,cAACgF,GAAA,EAAD,CAAU9D,WAAW,aAArB,SACE,cAACqD,EAAA,EAAD,CACEC,QAAS,WApBH,IAAAP,IAoB+BjE,EAAK,IAnB9DwB,EAAQ8B,KAAR,iBAAuBW,KAkBL,SAGE,cAAC,GAAD,CAAWjE,MAAOA,OAJiBA,EAAK,UAUlD,qBAAKP,UAAWN,EAAQyP,qBAAxB,SACE,cAACxO,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAnC,yBAA4C,mB,kFCrEtD3B,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJiI,SAAU,GAEZpG,MAAO,CACL8G,OAAQ,IACR1I,MAAO,KAET0T,YAAa,CACXxR,QAAS,OACT2E,eAAgB,aAChBvE,OAAQ,eAEVqR,aAAc,CAAE9L,YAAa,MAAOhG,gBAAiB,UACrD+R,WAAY,CACV/L,YAAa,MACbhG,gBAAiB,aACjBL,MAAO,QACP,UAAW,CAAEA,MAAO,QAASK,gBAAiB,WAEhDgS,eAAgB,CACdhM,YAAa,MACbhG,gBAAiB,YACjBL,MAAO,QACP,UAAW,CAAEA,MAAO,QAASK,gBAAiB,eAEhDkL,QAAS,CACPhL,QAASjC,EAAMI,QAAQ,QAmKZ4T,GA/JE,SAAA1T,GACf,IACQ1B,EADamE,qBAAW5E,GACxBS,KACFyG,EAAOmJ,cAAPnJ,GACA9E,EAAUT,KACV8C,EAAUC,cALQ,EAOUtE,qBAPV,mBAOjB6P,EAPiB,KAONC,EAPM,OAQM9P,oBAAS,GARf,mBAQjBG,EARiB,KAQRC,EARQ,OAS0BJ,oBAAS,GATnC,mBASjB6E,EATiB,KASE3C,EATF,OAUMlC,mBAAS,IAVf,mBAUjB+C,EAViB,KAUR+B,EAVQ,KAYxB3D,qBAAU,YACY,uCAAG,4BAAAX,EAAA,6DACrBJ,GAAW,GADU,SAEEwM,GAAiB9F,GAFnB,OAGG,OADlB7F,EAFe,QAGRC,QACX4O,EAAa7O,EAASwL,KAAKA,MAC3BrM,GAAW,IACFa,EAAS8B,QAClBrC,OAAOgV,MAAMzU,EAAS8B,SACO,MAApB9B,EAASC,SAClB0E,QAAQC,IAAI5E,EAASwL,KAAKa,QAC1BxI,EAAW,yBACX5C,GAAqB,IAXF,2CAAH,qDAepBiO,KACC,CAACrJ,IAEJ,IAAM6O,EAAa,uCAAG,4BAAAnV,EAAA,sEACGuM,GAAmB1M,EAAI,IAASyG,GADnC,OAEI,OADlB7F,EADc,QAEPC,QACX4O,EAAa7O,EAASwL,KAAKA,MAC3B3H,EAAW,yBACX5C,GAAqB,IACQ,MAApBjB,EAASC,QAClB0E,QAAQC,IAAI5E,EAASwL,KAAKa,QAC1BxI,EAAW,wBACX5C,GAAqB,IACQ,MAApBjB,EAASC,SAClB0E,QAAQC,IAAI5E,EAASwL,KAAK1J,SAC1B+B,EAAW7D,EAASwL,KAAK1J,SACzBb,GAAqB,IAbH,2CAAH,qDAiBb0T,EAAgB,uCAAG,gCAAApV,EAAA,6DACjBK,EAAUH,OAAOC,aAAaC,QAAQ,QACtCP,EAAOS,KAAKC,MAAMF,GAFD,SAGAoM,GAAqB5M,EAAI,IAASyG,GAHlC,OAIC,OADlB7F,EAHiB,QAIVC,QACX4O,EAAa7O,EAASwL,KAAKA,MAC3B3H,EAAW,0BACX5C,GAAqB,IACQ,MAApBjB,EAASC,SAClB0E,QAAQC,IAAI5E,EAASwL,KAAKa,QAC1BxI,EAAW,wBACX5C,GAAqB,IAXA,2CAAH,qDAwBhB2T,GADqB,OAAGhG,QAAH,IAAGA,OAAH,EAAGA,EAAWH,QAAQoG,SAASzV,EAAI,MAE1D,CACE0V,QAASH,EACTI,UAAW,cAAC,KAAD,IACXlQ,KAAM,SAER,CACEiQ,QAASJ,EACTK,UAAW,cAAC,KAAD,IACXlQ,KAAM,UAEZ,OACE,eAAC,IAAMM,SAAP,WACGvB,GACC,cAAC,EAAD,CACEzC,KAAMW,EACNd,eAAgBc,EAChBb,qBAAsBA,IAGzB/B,EACC,cAACyK,GAAA,EAAD,IAEA,mCACE,eAACtD,EAAA,EAAD,CAAMC,WAAS,EAACjF,UAAWN,EAAQN,KAAnC,UACE,cAAC4F,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAAC7H,EAAA,EAAD,CACEC,WAAS,EACTiB,eAAe,SACf3G,QAAS,EACTkC,WAAW,SAJb,SAME,cAACuD,EAAA,EAAD,CAAsBE,MAAI,EAAC2H,GAAI,GAA/B,SACE,cAAC,GAAD,CAAUxC,KAAMkD,KADR,iBAKd,eAACvI,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAAClF,UAAWN,EAAQqT,YAAxC,UACiB,gBAAdhV,EAAK8H,MACJ,cAACf,EAAA,EAAD,CACElE,QAAQ,YACRC,MAAM,YACNb,UAAWN,EAAQsT,aACnBjO,QAASwO,EAAcE,QACvBC,UAAWH,EAAcG,UAL3B,SAOGH,EAAc/P,OAIJ,UAAdzF,EAAK8H,MACJ,cAACf,EAAA,EAAD,CACElE,QAAQ,YACR8S,UAAW,cAAC,KAAD,IACX1T,UAAWN,EAAQwT,eACnBnO,QAhEe,WAC7BhD,EAAQ8B,KAAR,qBAA2B0J,EAAS,IAApC,UA2DY,+BASa,UAAdxP,EAAK8H,MACJ,cAACf,EAAA,EAAD,CACElE,QAAQ,YACR8S,UAAW,cAAC,KAAD,IACX1T,UAAWN,EAAQuT,WACnBlO,QAtEiB,WAC/BhD,EAAQ8B,KAAR,qBAA2B0J,EAAS,OAiExB,0BAWJ,eAACvI,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAAClF,UAAWN,EAAQN,KAAMG,QAAS,EAAvD,UACE,cAACyF,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,EAAf,SACE,cAAC,GAAD,CAAUkC,IAAKxB,EAAUH,QAASqC,UAAU,qBAAqBE,UAAU,kBAE7E,cAAC3K,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,EAAf,SACE,cAAC,GAAD,CAAWA,GAAI,GAAIkC,IAAKxB,EAAUD,OAAQjD,KAAMkD,kB,qBCvMnDoG,GAAa,uCAAG,WAAMnP,GAAN,uBAAAtG,EAAA,6DACrBC,EAAQyL,KACR5G,EAAY,CAChBC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB/E,KAIlBqM,EAVqB,UrBcGlO,iCqBdH,YAUQkI,GAVR,SAWJ9F,MAAM8L,EAAKxH,GAXP,cAWrBrE,EAXqB,gBAYRA,EAAS8E,OAZD,cAYrBC,EAZqB,yBAanB,CACN9E,OAAQD,EAASC,OACjBuL,KAAKzG,IAfoB,4CAAH,sDCgBpBzE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiH,OAAQ,CACNmB,SAAU,YAEZnI,KAAM,CACJ2N,SAAU,KAEZC,OAAO,aACL3N,MAAO,OACP0H,WAAY5H,EAAMI,QAAQ,GAC1BD,UAAWH,EAAMI,QAAQ,GACzB2H,YAAa/H,EAAMI,QAAQ,IAC1BJ,EAAMwI,YAAYC,GAAG,IAAyB,EAAnBzI,EAAMI,QAAQ,IAAU,CAClDF,MAAO,IACP0H,WAAY,OACZG,YAAa,SAGjB+F,QAAS,CACP1L,QAAS,OACT2E,eAAgB,YAElBV,OAAQ,CACNlG,UAAWH,EAAMI,QAAQ,GACzBwH,WAAY5H,EAAMI,QAAQ,IAE5B2N,YAAa,CACXvL,OAAQxC,EAAMI,QAAQ,GACtBwN,SAAU,KAEZ6G,UAAW,CACT7M,WAAY5H,EAAMI,QAAQ,GAC1B2H,YAAa/H,EAAMI,QAAQ,GAC3BF,MAAO,KAETwU,MAAO,CACLtS,QAAS,QAEXqK,MAAO,CACLvM,MAAO,OACP0I,OAAQ,QACRpG,OAAQ,OACR0F,SAAU,OA0RCyM,GApRG,SAAArU,GAChB,IAAMsC,EAAUC,cACVtC,EAAUT,KAFS,EAGC0O,cAApBpD,EAHmB,EAGnBA,OAAQgG,EAHW,EAGXA,QAHW,EAKW7S,mBAAS,CAC3CkF,KAAM,GACNiI,KAAM,GACNqF,SAAU,EACV6D,aAAc,GACd5O,GAAI,KACJwE,KAAM,KACNsG,YAAa,KACbE,MAAO,GACP5F,WAduB,mBAKlByJ,EALkB,KAKNC,EALM,OAiBCvW,mBAAS,MAjBV,mBAiBlBkO,EAjBkB,KAiBXsI,EAjBW,OAkBKxW,oBAAS,GAlBd,mBAkBlBG,EAlBkB,KAkBTC,EAlBS,OAmBQJ,oBAAS,GAnBjB,mBAmBlB+P,EAnBkB,KAmBRC,EAnBQ,OAoByBhQ,oBAAS,GApBlC,mBAoBlB6E,EApBkB,KAoBC3C,EApBD,OAqBKlC,mBAAS,IArBd,mBAqBlB+C,EArBkB,KAqBT+B,EArBS,KAuBzB3D,qBAAU,WAgCO,QAAZ0R,GAAiC,OAAZA,QAAgC3C,IAAZ2C,GAAqC,KAAZA,GA/BhD,uCAAG,WAAM/L,GAAN,qBAAAtG,EAAA,6DACtBJ,GAAW,GADW,SAECuS,GAAkB7L,GAFnB,UAGE,OADlB7F,EAFgB,QAGTC,OAHS,oBAIpBqV,EAActV,EAASwL,KAAKA,SACpBgK,EAAgBxV,EAASwL,KAAKA,KAA9BgK,aACQpK,OAAS,GANL,kCAOa4J,GAAcQ,EAAY,GAAZ,KAP3B,QAQc,OAD1BC,EAPY,QAQGxV,QACXyV,EAASD,EAAiBjK,KAAKA,KAA/BkK,KACRH,EAAS,GAAD,OAAI5X,EAAJ,YAAc+X,KAEY,MAA5BD,EAAiBxV,SACvB0E,QAAQC,IAAI6Q,EAAiBpJ,QAC7BxI,EAAW,2BACX5C,GAAqB,IAfL,QAkBpB9B,GAAW,GAlBS,wBAoBO,MAApBa,EAASC,QAChB4D,EAAW,oBACX5C,GAAqB,IAEK,MAApBjB,EAASC,SACf0E,QAAQC,IAAI5E,EAASqM,QACrBxI,EAAW,yBACX5C,GAAqB,IA3BD,4CAAH,qDAgCnB0U,CAAgB/D,GAChB7C,GAAY,IAGZ5P,GAAW,KAGZ,IAIH,IAAM2E,EAAoB,SAAAlC,GACxB,IAAMmC,EAAYnC,EAAMoC,OAAOC,KACzBC,EAAatC,EAAMoC,OAAO5D,MAChCkV,EAAc,2BAAKD,GAAN,kBAAmBtR,EAAYG,MAQxCC,EAAiB,uCAAG,WAAMvC,GAAN,iBAAArC,EAAA,yDAEJ,KADd8M,EAASwF,GAAoBwD,IACzBjK,OAFc,wBAGnB0D,GACDwG,EAAc,2BAAID,GAAL,IAAiB,IAAOzD,KAJjB,SAMCX,GAAUoE,GANX,OAMhBrV,EANgB,OAOtB2E,QAAQC,IAAI5E,GACY,MAApBA,EAASC,QACX4D,EAAW,SAAD,OAAUiL,EAAW,WAAY,aAC3C7N,GAAqB,GAErB2U,KAE0B,MAApB5V,EAASC,QACf4D,EAAW,oBACX5C,GAAqB,IAEK,MAApBjB,EAASC,SACf0E,QAAQC,IAAI5E,EAASqM,QACrBxI,EAAW,yBACX5C,GAAqB,IArBD,wBAyBtB0D,QAAQC,IAAIyH,EAAO,IACnBxI,EAAWwI,EAAO,IAClBpL,GAAqB,GA3BC,4CAAH,sDA+BjB2U,EAAiB,WACrB3Q,YAAW,WACT7B,EAAQ8B,KAAR,gBAAsB0G,MACrB,MAQE3H,EAA0CoR,EAA1CpR,KAAMiI,EAAoCmJ,EAApCnJ,KAAMlB,EAA8BqK,EAA9BrK,KAAMxE,EAAwB6O,EAAxB7O,GAAI+K,EAAoB8D,EAApB9D,SAAUC,GAAU6D,EAAV7D,MACvC,OACE,cAAC,IAAMrM,SAAP,UACGjG,EAAU,cAACyK,GAAA,EAAD,IACT,gCACC/F,GAAqB,cAAC,EAAD,CAAkBzC,KAAMyC,EAAmB5C,eAAgBc,EAASb,qBAAsBA,IAC/GgM,GAAU,mCAAE,qBAAK5L,UAAWN,EAAQkM,MAAO4I,IAAK5I,EAAO6I,IAAI,YAC5D,qBAAKzU,UAAWN,EAAQsN,OAAxB,SACA,eAACvB,GAAA,EAAD,CAAMzL,UAAWN,EAAQN,KAAMwB,QAAQ,WAAvC,UACE,eAACiL,GAAA,EAAD,WACE,cAAClL,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAKE,MAAM,SAAUD,MAAM,UAA9D,mBACM4M,EAAU,SAAU,MAD1B,YAGA,eAACzI,EAAA,EAAD,CAAMC,WAAS,EAAC1F,QAAS,EAAzB,UACE,cAACyF,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAACxI,EAAA,EAAD,CACEC,UAAQ,EACRvF,MAAO6D,EACP4B,GAAG,OACH5B,KAAK,OACL6B,MAAM,aACNF,WAAS,EACTG,aAAa,aACbE,SAAUnC,EACVkC,WAAS,MAGb,cAACK,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAACxI,EAAA,EAAD,CACEC,UAAQ,EACRvF,MAAO8L,EACPrG,GAAG,OACH5B,KAAK,OACL6B,MAAM,cACNF,WAAS,EACTG,aAAa,yBACbE,SAAUnC,MAId,cAACuC,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAACxI,EAAA,EAAD,CACEtF,MAAOmR,EACP1L,GAAG,WACH5B,KAAK,WACL6B,MAAM,WACNF,WAAS,EACTG,aAAa,yBACbE,SAAUnC,MAGd,cAACuC,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAACxI,EAAA,EAAD,CACEC,UAAQ,EACRvF,MAAOoR,GACP3L,GAAG,QACH5B,KAAK,QACL6B,MAAM,QACNF,WAAS,EACTG,aAAa,yBACbE,SAAUnC,MAId,cAACuC,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAI0B,GAAI,EAAvB,SACE,cAAClK,EAAA,EAAD,CACEtF,MAAO0O,EAAY9D,EAAK+K,MAAM,KAAK,GAAM,KACzClQ,GAAG,OACHC,MAAM,aACN7B,KAAK,OACLiC,KAAK,iBACL7E,UAAWN,EAAQkU,UACnBe,gBAAiB,CACfC,QAAQ,GAEVhQ,SAAUnC,MAGd,cAACuC,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAI0B,GAAI,EAAvB,SACE,cAAClK,EAAA,EAAD,CACEtF,MAAO0O,EAAYtI,EAAGuP,MAAM,KAAK,GAAK,KACtClQ,GAAG,OACHC,MAAM,WACN7B,KAAK,KACLiC,KAAK,iBACL7E,UAAWN,EAAQkU,UACnBe,gBAAiB,CACfC,QAAQ,GAEVhQ,SAAUnC,OAIZgL,GAAa,eAACzI,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,UACb,uBACE7M,UAAWN,EAAQmU,MACnBrP,GAAG,wBACHK,KAAK,OACLgQ,OAAO,oBACPjS,KAAK,cACLgC,SAnJkB,SAAArE,GAChC2T,EAASY,IAAIC,gBAAgBxU,EAAMoC,OAAOqS,MAAM,KAChDf,EAAc,2BAAKD,GAAN,IAAkB/D,YAAa1P,EAAMoC,OAAOqS,MAAM,SAmJnD,uBAAOC,QAAQ,wBAAf,SACE,cAACnQ,EAAA,EAAD,CACElE,QAAQ,YACRC,MAAM,UACNmD,UAAU,OAHZ,sCASH4H,IAAU6B,GACT,cAAC,IAAM3J,SAAP,UACE,cAACkB,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAACnE,EAAA,EAAD,CACEE,aAAW,SACX5I,UAAWN,EAAQiC,OACnBoD,QA1HD,WACjBmP,EAAS,OAsHO,SAKE,cAAC,KAAD,CAAYxF,SAAS,sBAOjC,eAAC1C,GAAA,EAAD,WACE,cAAChH,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAI0B,GAAI,EAAvB,SACE,cAACzJ,EAAA,EAAD,CACElE,QAAQ,YACRmE,QAASwP,EAFX,4BAOF,cAACvP,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAI0B,GAAI,EAAvB,SACE,cAACzJ,EAAA,EAAD,CACElE,QAAQ,YACRC,MAAM,UACNkE,QAASjC,EAHX,SAKG2K,EAAU,SAAU,2BCjU/BxO,GAAYC,YAAW,CAC3BE,KAAM,CACJ2M,UAAW,SACX1K,UAAW,oCAEbmN,OAAQ,CACNjN,QAAS,eACTI,OAAQ,QACR8M,UAAW,cAEbrH,MAAO,CACLsH,SAAU,IAEZC,IAAK,CACHC,aAAc,IAEhB+C,WAAY,CACVzQ,gBAAiB,QACjB0N,aAAc,QAEhBgD,SAAU,CACR1Q,gBAAiB,MACjB0N,aAAc,UAgEHsG,GA5DG,SAAAzV,GAChB,IAAMC,EAAUT,KACRsB,EAAUd,EAAVc,MAEAqC,EAAmCrC,EAAnCqC,KAAMiI,EAA6BtK,EAA7BsK,KAAMqF,EAAuB3P,EAAvB2P,SAAUvG,EAAapJ,EAAboJ,KAAMxE,EAAO5E,EAAP4E,GAC9BvG,EAAS8R,GAAe/G,EAAMxE,GAChC2M,EAAa,WACfC,EAAyB,IAAXnT,EAAec,EAAQkS,SAAWlS,EAAQiS,WAE3C,IAAX/S,EAAckT,EAAa,WACX,IAAXlT,IAAckT,EAAa,SACpC,IAAMnB,EAAY,IAAI5P,KAAK4I,GACrBqI,EAAe,UAAMrB,EAAUsB,UAAhB,YAA6BtB,EAAUuB,WAAvC,YAAqDvB,EAAU3P,cAA/D,cAAkF2P,EAAUwB,WAA5F,YAA0GxB,EAAUyB,cAEnIC,EAAS,IAAItR,KAAKoE,GAClBmN,EAAY,UAAMD,EAAOJ,UAAb,YAA0BI,EAAOH,WAAjC,YAA+CG,EAAOrR,cAAtD,cAAyEqR,EAAOF,WAAhF,YAA8FE,EAAOD,aAArG,KAElB,OACE,cAAC,IAAMtO,SAAP,UACE,cAAC2H,GAAA,EAAD,CAAMzL,UAAWN,EAAQN,KAAMwB,QAAQ,WAAvC,SACE,eAACiL,GAAA,EAAD,WACE,cAAClL,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAA/B,SACG+B,GAD0C,QAG7C,cAACjC,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,YAENb,UAAWN,EAAQiP,IAJrB,SAMG9D,GAHG,QAKN,eAAClK,EAAA,EAAD,CACEC,QAAQ,KACRkL,MAAO,CAAEjL,MAAO,iBAFlB,wBAKcqP,IAFR,kBAIN,eAACvP,EAAA,EAAD,CAAYC,QAAQ,KAAKkL,MAAO,CAAEjL,MAAO,iBAAzC,UACE,4BACE,4BAAImR,MACD,IAHP,KAIK,IACH,4BACE,4BAAIM,SAGR,cAACE,GAAA,EAAD,CACI3R,MAAM,YACNqL,KAAK,QACLzH,MAAOqN,EACP9R,UAAW+R,Y,8BCxEnB9S,GAAYC,YAAW,CAC3BE,KAAM,CAEJmC,QAAS,OACTE,WAAY,SACZsG,OAAQ,IACR3G,QAAS,OAETD,OAAQ,QACRgU,YAAa,WAEfC,UAAW,CACTrN,OAAQ,KAEVsN,cAAe,CACbjU,QAAS,QAEXkU,cAAe,CACblU,QAAS,OACTO,OAAQ,QAEV4T,iBAAkB,CAChBlW,MAAO,QACPsC,OAAQ,QAEVwN,qBAAsB,CACpBxN,OAAQ,OACRd,MAAO,WAET2U,YAAa,CACXnW,MAAO,WAmKIoW,GA/JS,SAAAhW,GACtB,IAAMwC,EAAeC,qBAAW5E,GADD,EAELI,oBAAU,GAFL,mBAExBgY,EAFwB,KAEjBC,EAFiB,OAGDjY,oBAAS,GAHR,mBAGxBG,EAHwB,KAGfC,EAHe,KAIzB4B,EAAUT,KAJe,EAKDvB,mBAAS,IALR,mBAKxB+C,EALwB,KAKf+B,EALe,OAMmB9E,oBAAS,GAN5B,mBAMxB6E,EANwB,KAML3C,EANK,OAOelC,oBAAS,GAPxB,mBAOxBkY,EAPwB,KAOPC,EAPO,KAQvBtF,EAAY9Q,EAAZ8Q,QACAxS,EAASkE,EAATlE,KATuB,EAUWL,mBAAS,CACjDqB,MAAO,EACPsS,SAAU,KAZmB,mBAUxByE,EAVwB,KAUTC,EAVS,KAe/BlX,qBAAU,YACa,uCAAG,kCAAAX,EAAA,6DACtBJ,GAAW,GADW,SAECoT,GAAwBnT,EAAI,IAASwS,GAFtC,OAGE,OADlB5R,EAFgB,QAGTC,SAA4C,IAA1BD,EAASwL,KAAKoF,SAAmB,EAClC5Q,EAASwL,KAAKA,KAAlC6L,EADqD,EACrDA,MAAO3E,EAD8C,EAC9CA,SACf0E,EAAiB,CACfhX,MAAOiX,EACP3E,aAEFwE,GAAmB,GACnB/X,GAAW,IAEgB,MAApBa,EAASC,QAChB0E,QAAQC,IAAI5E,EAASwL,KAAKa,OAAO,IACjCpL,EAAqB,yBACrBA,GAAqB,IAEM,MAApBjB,EAASC,SAA4C,IAA1BD,EAASwL,KAAKoF,SAChDzR,GAAW,GAlBS,2CAAH,qDAqBrBmY,KACC,IAEH,IAAMC,EAAkB,uCAAG,sCAAAhY,EAAA,yDACnB+S,EAAW,CACfV,UACA7F,OAAQ3M,EAAI,IACZiY,MAAOjX,EACPsS,YAGoB,KADhBrG,EAASoG,GAAuBH,IAC3BlH,OARc,gCASAiH,GAAiBC,GATjB,OAUC,OADlBtS,EATiB,QAUVC,QAAiB,EACAD,EAASwL,KAAKA,KAAlC6L,EADmB,EACnBA,MAAO3E,EADY,EACZA,SACf7O,EAAW,mCACX5C,GAAqB,GACrBmW,EAAiB,CACfhX,MAAOiX,EACP3E,aAEFwE,GAAmB,IAEQ,MAApBlX,EAASC,QAChB4D,EAAW,gCACX5C,GAAqB,IAEM,MAApBjB,EAASC,SAChB0E,QAAQC,IAAI5E,EAASwL,KAAKa,QAC1BxI,EAAW,yBACX5C,GAAqB,IA3BA,uBA+BvB0D,QAAQC,IAAIyH,GACZxI,EAAWwI,EAAO,IAClBpL,GAAqB,GAjCE,4CAAH,qDA0ChBb,EAAoB+W,EAApB/W,MAAOsS,EAAayE,EAAbzE,SACf,OACE,cAAC,IAAMvN,SAAP,UACGjG,EAAU,cAACyK,GAAA,EAAD,IACT,qCACG/F,GAAqB,cAAC,EAAD,CAAkBzC,KAAMyC,EAAmB5C,eAAgBc,EAASb,qBAAsBA,IAChH,cAAC6L,GAAA,EAAD,CAAMzL,UAAWN,EAAQN,KAAzB,SACE,eAAC4F,EAAA,EAAD,CAAMC,WAAS,EAAC1F,QAAS,EAAzB,UACE,cAACyF,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,qBAAK7M,UAAWN,EAAQyP,qBAAxB,SACE,cAACxO,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAnC,SACGgV,EAAkB,wCAA0C,6BADnB,YAKhD,qBAAK5V,UAAWN,EAAQ4V,cAAxB,SACE,eAACtQ,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAAC4H,GAAI,GAAzB,UACE,cAAC7H,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,EAAf,SACE,qBAAK7M,UAAWN,EAAQ8V,YAAxB,SACE,cAACW,GAAA,EAAD,CACEvT,KAAK,iBACL7D,MAAOA,EACPqX,UAAW,GACXxR,SAAU,SAACrE,EAAO8V,GAChBN,EAAiB,2BAAKD,GAAN,IAAqB/W,MAAOsX,MAE9CC,eAAgB,SAAC/V,EAAOgW,GACtBZ,EAASY,IAEXC,SAAUZ,QAIhB,cAAC5Q,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,EAAf,SACE,cAAClM,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAnC,SACa,OAAV7B,GAAkB,cAACqG,EAAA,EAAD,CAAKqR,GAAI,EAAT,SAAa9Z,GAAkB,IAAX+Y,EAAeA,EAAQ3W,MADpB,eAQlD,cAACiG,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,qBAAK7M,UAAWN,EAAQ6V,iBAAxB,SACE,cAAClR,EAAA,EAAD,CACEG,GAAG,4BACHC,MAAM,sBACNiS,WAAS,EACTC,KAAM,EACN5X,MAAOsS,EACPzQ,QAAQ,WACRgC,KAAK,WACLgC,SAxDY,SAAArE,GAC5BwV,EAAiB,2BAAKD,GAAN,IAAqBzE,SAAU9Q,EAAMoC,OAAO5D,UAwD5CyX,SAAUZ,QAIhB,cAAC5Q,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,qBAAK7M,UAAWN,EAAQ2V,cAAxB,SACE,cAACvQ,EAAA,EAAD,CACElE,QAAQ,YACRC,MAAM,UACNkE,QAASmR,EACTM,SAAUZ,EAJZ,4CCpLZ3W,GAAYC,YAAW,CAC3BoS,KAAM,CACJ/P,QAAS,OACTJ,OAAQ,iBACRQ,OAAQ,WACRN,UAAW,QAEbkQ,YAAa,CACXC,KAAM,EACNjQ,QAAS,OACTwK,UAAW,OACX7F,eAAgB,cAElBuL,UAAW,CACTpS,MAAO,KAETqS,WAAY,CACV,SAAU,CACRxQ,gBAAiB,gBAGrB0V,YAAa,CACXjV,OAAQ,OACRd,MAAO,WAETxB,MAAO,CACLA,MAAO,WA4CIwX,GAxCM,SAAApX,GACnB,IAAMC,EAAUT,KACRgS,EAAaxR,EAAbwR,SACA+E,EAAoB/E,EAApB+E,MAAO3E,EAAaJ,EAAbI,SACf,OACE,cAACrM,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACuG,GAAA,EAAD,CAAMzL,UAAWN,EAAQ4R,KAAzB,SACE,qBAAKtR,UAAWN,EAAQ6R,YAAxB,SACE,eAAC1F,GAAA,EAAD,WACE,qBAAK7L,UAAWN,EAAQkX,YAAxB,SACE,cAACjW,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAnC,SACGjE,EAAOqZ,OAGZ,qBAAKhW,UAAWN,EAAQL,MAAxB,SACE,cAACgF,EAAA,EAAD,CACEG,GAAG,4BACHC,MAAM,sBACNiS,WAAS,EACTC,KAAM,EACN5X,MAAOsS,EACPzQ,QAAQ,WACRgC,KAAK,WACL4T,UAAU,gBCrDpBvX,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmS,KAAM,CACJjQ,UAAW,+GAEbjC,KAAM,CACJuC,OAAQ,QAEVsN,OAAQ,CACN1N,QAAS,cAkEEuV,GA5DW,SAAArX,GAAU,IAC3B8Q,EAAW9Q,EAAX8Q,QACD7Q,EAAUT,KAFiB,EAGOvB,mBAAS,IAHhB,mBAG1BqZ,EAH0B,KAGZC,EAHY,OAIHtZ,oBAAS,GAJN,mBAI1BG,EAJ0B,KAIjBC,EAJiB,OAKiBJ,oBAAS,GAL1B,mBAK1B6E,EAL0B,KAKP3C,EALO,OAMHlC,mBAAS,IANN,mBAM1B+C,EAN0B,KAMjB+B,EANiB,KA0BjC,OAjBA3D,qBAAU,YACU,uCAAG,4BAAAX,EAAA,6DACnBJ,GAAW,GADQ,SAEIqT,GAAqBZ,GAFzB,OAGI,OADjB5R,EAFa,QAGPC,QACVoY,EAAgBrY,EAASwL,KAAKA,MAC9BrM,GAAW,IAEgB,MAApBa,EAASC,SAChB4D,EAAW,yBACX5C,GAAqB,GACrB9B,GAAW,IAVM,2CAAH,qDAalBmZ,KACA,IAGA,8BACCpZ,EACC,cAACyK,GAAA,EAAD,IAEA,qCACC/F,GAAqB,cAAC,EAAD,CAAkBzC,KAAMyC,EAAmB5C,eAAgBc,EAASb,qBAAsBA,IAChH,gCACA,cAACe,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,KAAnC,uBAGE,cAACoE,EAAA,EAAD,CAEEhF,UAAWN,EAAQN,KACnB6F,WAAS,EAAC0H,QAAQ,SAHpB,SAKGoK,EAAanK,KAAI,SAACqE,GACjB,OACE,cAACjM,EAAA,EAAD,CAA2CE,MAAI,EAAC2H,GAAI,GAAIC,GAAI,EAA5D,SACE,qBAAK9M,UAAWN,EAAQ2M,UAAxB,SAGI,cAAC,GAAD,CAAc4E,SAAUA,KAFrBA,EAAQ,MAFjB,oBAAwBA,EAAQ,UANhC,sBCpCRhS,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJiI,SAAU,GAEZpG,MAAO,CACL8G,OAAQ,IACR1I,MAAO,KAET+M,QAAS,CACPhL,QAASjC,EAAMI,QAAQ,IAEzBqM,MAAO,CACLvM,MAAO,OACP0I,OAAQ,SAEVgL,YAAa,CACXxR,QAAS,OACT2E,eAAgB,cAElB8M,aAAc,CACZ1T,UAAW,MACX4H,YAAa,MACbhG,gBAAiB,UAEnB+R,WAAY,CACV3T,UAAW,MACX4H,YAAa,MACbhG,gBAAiB,aACjBL,MAAO,QACP,UAAW,CAAEA,MAAO,QAASK,gBAAiB,WAEhDgW,gBAAiB,CACf5X,UAAW,MACX4H,YAAa,MACbhG,gBAAiB,UACjBL,MAAO,QACP,UAAW,CAAEK,gBAAiB,QAEhCiW,mBAAoB,CAClB7X,UAAW,MACX4H,YAAa,MACbhG,gBAAiB,SACjBL,MAAO,QACP,UAAW,CAAEK,gBAAiB,WAEhCkW,cAAe,CACb/X,MAAO,WA2MIgY,GAvMG,SAAA5X,GAChB,IAAMwC,EAAeC,qBAAW5E,GAC1BkH,EAAOmJ,cAAPnJ,GACA9E,EAAUT,KACV8C,EAAUC,cAJS,EAMWtE,qBANX,mBAMlBsW,EANkB,KAMNC,EANM,OAOKvW,oBAAS,GAPd,mBAOlBG,EAPkB,KAOTC,EAPS,OAQSJ,qBART,mBAQlB4Z,EARkB,KAQPC,EARO,OASuB7Z,qBATvB,mBASlB8Z,EATkB,KASAC,EATA,OAU+B/Z,oBAAS,GAVxC,mBAUlBga,EAVkB,KAUIC,EAVJ,OAWmCja,oBAAS,GAX5C,mBAWlBka,EAXkB,KAWMC,EAXN,OAYyBna,oBAAS,GAZlC,mBAYlB6E,EAZkB,KAYC3C,EAZD,OAaKlC,mBAAS,IAbd,mBAalB+C,EAbkB,KAaT+B,EAbS,KAcjBzE,EAASkE,EAATlE,KAERc,qBAAU,WACRyV,MAEC,CAAC9P,IAEJ,IAAMsT,EAAmB,uCAAG,4BAAA5Z,EAAA,sEACHoS,GAAavS,EAAI,IAASiW,EAAU,KADjC,OAEF,OADlBrV,EADoB,QAEbC,QACXqV,EAActV,EAASwL,KAAKA,MAC5B3H,EAAW,uBACX5C,GAAqB,IACQ,MAApBjB,EAASC,QAClB0E,QAAQC,IAAI5E,EAASwL,KAAK1J,SAC1B+B,EAAW7D,EAASwL,KAAK1J,SACzBb,GAAqB,IACQ,MAApBjB,EAASC,SAClB0E,QAAQC,IAAI5E,EAASwL,KAAKa,QAC1BxI,EAAW,yBACX5C,GAAqB,IAbG,2CAAH,qDAiBnB0U,EAAe,uCAAG,kCAAApW,EAAA,6DACtBJ,GAAW,GADW,SAECuS,GAAkB7L,GAFnB,UAGE,OADlB7F,EAFgB,QAGTC,OAHS,oBAIpBqV,EAActV,EAASwL,KAAKA,MAC5BsN,EACE/G,GAAe/R,EAASwL,KAAKA,KAAKR,KAAMhL,EAASwL,KAAKA,KAAKhF,QAErDgP,EAAgBxV,EAASwL,KAAKA,KAA9BgK,aACQpK,OAAS,GATL,kCAUa4J,GAAcQ,EAAY,GAAZ,KAV3B,QAWc,OAD1BC,EAVY,QAWGxV,QACXyV,EAASD,EAAiBjK,KAAKA,KAA/BkK,KACRkD,EAAalD,IACwB,MAA5BD,EAAiBxV,SAC1B0E,QAAQC,IAAI6Q,EAAiBjK,KAAKa,QAClCxI,EAAW,wBACX5C,GAAqB,IAjBL,QAoBpB9B,GAAW,GApBS,wBAqBXa,EAAS8B,SAClB+B,EAAW7D,EAAS8B,SACpBb,GAAqB,IAErB0D,QAAQC,IAAI5E,EAASqM,QAzBD,4CAAH,qDAyCrB,OACE,cAAC,IAAMlH,SAAP,UACGjG,EACC,cAACyK,GAAA,EAAD,IAEA,gCACG/F,GACC,cAAC,EAAD,CACEzC,KAAMyC,EACN5C,eAAgBc,EAChBb,qBAAsBA,IAGzB0X,GACC,qCACE,qBACEtX,UAAWN,EAAQkM,MACnB4I,IAAG,UAAKlY,EAAL,YAAegb,GAClB7C,IAAI,UAEN,uBACA,0BAGJ,cAACzP,EAAA,EAAD,CACEC,WAAS,EACTiB,eAAe,SACf3G,QAAS,EACTkC,WAAW,SAJb,SAME,cAACuD,EAAA,EAAD,CAAsBE,MAAI,EAAC2H,GAAI,GAA/B,SACE,cAAC,GAAD,CAAWtM,MAAOyT,KADV,eAIZ,eAAChP,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAAClF,UAAWN,EAAQqT,YAAxC,WACIiB,EAAWD,aAAaP,SAASzV,EAAI,MACvB,gBAAdA,EAAK8H,MACL2R,EAAmB,GACjB,cAAC1S,EAAA,EAAD,CACElE,QAAQ,YACRZ,UAAWN,EAAQsT,aACnBjO,QAAS+S,EACTpE,UAAW,cAAC,KAAD,IAJb,sBASW,UAAd3V,EAAK8H,OAA0C,IAAtB2R,GACxB,cAAC1S,EAAA,EAAD,CACElE,QAAQ,YACRZ,UAAWN,EAAQuT,WACnBlO,QA/Dc,WAC1BhD,EAAQ8B,KAAR,qBAA2BmQ,EAAWzJ,OAAtC,YAAgDyJ,EAAU,OA+D9CN,UAAW,cAAC,KAAD,IAJb,kBASa,gBAAd3V,EAAK8H,MAA+C,IAArB2R,GAC9B,cAAC1S,EAAA,EAAD,CACElE,QAAQ,YACRZ,UAAWN,EAAQwX,gBACnBnS,QArEqB,WACjC4S,GAAyBD,IAqEbhE,UAAW,cAAC,KAAD,IAJb,wBASa,UAAd3V,EAAK8H,MAAyC,IAArB2R,GACxB,cAAC1S,EAAA,EAAD,CACElE,QAAQ,YACRZ,UAAWN,EAAQyX,mBACnBpS,QA3EuB,WACnC8S,GAA2BD,IA2EflE,UAAW,cAAC,KAAD,IAJb,+BAUHgE,GACC,qCACE,uBACA,cAACjM,GAAA,EAAD,UACE,cAACzG,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAApB,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAAC,GAAD,CAAiB0D,QAASyD,EAAU,eAM9C,uBACA,cAAChP,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJlF,UAAWN,EAAQ0X,cACnBlR,eAAe,QAJjB,SAME,cAAClB,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAAC,GAAD,CAAUkC,IAAKiF,EAAWD,aAActE,UAAU,eAAeE,UAAU,sBAI9EiI,GACC,qCACE,uBACA,cAACnM,GAAA,EAAD,UACE,cAACzG,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAApB,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAAC2H,GAAI,GAAf,SACE,cAAC,GAAD,CAAmB0D,QAASyD,EAAU,qBC7PpD/U,GAAYC,aAAW,SAACC,GAAD,OAC3BgN,aAAa,CACX/M,KAAM,CACJiI,SAAU,EACV9F,QAAS,OACT2E,eAAgB,UAElBkG,QAAS,CACPhL,QAASjC,EAAMI,QAAQ,IAEzB8M,UAAW,CACTjL,QAAS,aAyEA2W,GApEG,SAAAtY,GAChB,IAAMgN,EAASxN,KACP8P,EAAQtP,EAARsP,IAFiB,EAGSrR,qBAHT,mBAGlBkV,EAHkB,KAGPC,EAHO,OAIKnV,oBAAS,GAJd,mBAIlBG,EAJkB,KAITC,EAJS,OAKyBJ,oBAAS,GALlC,mBAKlB6E,EALkB,KAKC3C,EALD,OAMKlC,mBAAS,IANd,mBAMlB+C,EANkB,KAMT+B,EANS,KAOnBT,EAAUC,cAEhBnD,qBAAU,YACK,uCAAG,4BAAAX,EAAA,6DACdJ,GAAW,GADG,SAESsS,GAAerB,GAAO,IAF/B,OAGU,OADlBpQ,EAFQ,QAGDC,QACXiU,EAAalU,EAASwL,KAAKA,MAC3BrM,GAAW,IAEe,MAApBa,EAASC,SACf0E,QAAQC,IAAI,QAAS5E,EAASwL,KAAKa,QACnCxI,EAAW,yBACX5C,GAAqB,IAVT,2CAAH,qDAabkT,KACC,CAAC/D,IAEJ,IAAMiJ,EAAsB,SAAAxT,GAC1BzC,EAAQ8B,KAAR,iBAAuBW,KAGzB,OACE,8BACG3G,EACC,cAACyK,GAAA,EAAD,IAEA,qCACC/F,GAAqB,cAAC,EAAD,CAAkBzC,KAAMyC,EAAmB5C,eAAgBc,EAASb,qBAAsBA,IAChH,8BACE,cAACoF,EAAA,EAAD,CAEEhF,UAAWyM,EAAOrN,KAClB6F,WAAS,EAAC0H,QAAQ,SAHpB,SAKGiG,EAAUhG,KAAI,SAACrM,GACd,OACE,cAACyE,EAAA,EAAD,CAAwCE,MAAI,EAAC2H,GAAI,GAAIC,GAAI,EAAzD,SACE,qBAAK9M,UAAWyM,EAAOJ,UAAvB,SAGE,cAACvH,EAAA,EAAD,CACEC,QAAS,WAAQiT,EAAoBzX,EAAK,MAD5C,SAGE,cAAC,GAAD,CAAWA,MAAOA,EAAOwE,QAAS,WAAQiT,EAAoBzX,EAAK,WALhEA,EAAMiE,KAFf,oBAAwBjE,EAAK,UAN7B,qBC7CD0X,GAfI,SAAAxY,GACjB,IAEQyY,EAFahW,qBAAW5E,GACxBS,KACAma,iBACR,OACE,cAAC,IAAMpU,SAAP,UACGoU,EAAiBnO,OAAO,EACtB,cAAC,GAAD,CAAYgF,IAAKmJ,IACjB,mECoGMC,OAjGf,WACE,OACE,qBAAKnY,UAAU,MAAf,SACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEqU,KAAK,UACL+D,OAAK,EACLpU,UAAWqU,IAEb,cAAC,IAAD,CACEhE,KAAK,UACL+D,OAAK,EACLpU,UAAWlC,KAEb,cAAC,GAAD,CACEuS,KAAK,SACL+D,OAAK,EACLpU,UAAW,WACT,OACE,cAACoE,GAAD,CACEpE,UAAW,WACT,OAAQ,cAACsI,GAAD,UAKlB,cAAC,GAAD,CACE+H,KAAK,iBACL+D,OAAK,EACLpU,UAAW,WACT,OACE,cAACoE,GAAD,CACEpE,UAAW,WACT,OAAQ,cAAC,GAAD,UAKlB,cAAC,GAAD,CACEqQ,KAAK,YACL+D,OAAK,EACLpU,UAAW,WACT,OACE,cAACoE,GAAD,CACEpE,UAAW,WACT,OAAQ,cAAC,GAAD,UAKlB,cAAC,GAAD,CACEqQ,KAAK,8BACL+D,OAAK,EACLpU,UAAW,WACT,OACE,cAACoE,GAAD,CACEpE,UAAW,WACT,OAAQ,cAAC,GAAD,UAKlB,cAAC,GAAD,CACEqQ,KAAK,aACL+D,OAAK,EACLpU,UAAW,WACT,OACE,cAACoE,GAAD,CACEpE,UAAW,WACT,OAAQ,cAAC,GAAD,UAKlB,cAAC,GAAD,CACEqQ,KAAK,eACL+D,OAAK,EACLpU,UAAW,WACT,OACE,cAACoE,GAAD,CACEpE,UAAW,WACT,OAAQ,cAAC,GAAD,oBCtFfsU,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASxP,OACP,cAAC,IAAMyP,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.90af87a0.chunk.js","sourcesContent":["export const DB_URL = 'http://localhost:5000' ;\nexport const SIGNUP_URL = DB_URL + '/auth/signup';\nexport const SIGNIN_URL = DB_URL + '/auth/signin';\nexport const VERIFY_TOKEN = DB_URL + '/auth/verifyToken';\n\n\nexport const CLUB_LIST_URL = DB_URL + '/clubs';\nexport const NEW_CLUB_URL = DB_URL + '/club';\nexport const CLUB_ENROLL_URL = DB_URL + '/club/enroll';\nexport const CLUB_LEAVE_URL = DB_URL + '/club/leave';\n\nexport const USER_LIST_URL = DB_URL + '/user/userList';\n\nexport const NEW_EVENT_URL = DB_URL + '/event';\nexport const EVENT_LIST_URL = DB_URL + '/events/list';\nexport const EVENT_REGISTER_URL = DB_URL + '/event/register';\n\nexport const GET_RESOURCE_URL = DB_URL + '/resource';\n\nexport const NEW_FEEDBACK = DB_URL + '/event/feedback';\n\n\nexport const labels = {\n    0.5: 'Useless',\n    1: 'Useless+',\n    1.5: 'Poor',\n    2: 'Poor+',\n    2.5: 'Ok',\n    3: 'Ok+',\n    3.5: 'Good',\n    4: 'Good+',\n    4.5: 'Excellent',\n    5: 'Excellent+',\n  };\n  \n\n\nexport const imageUrl = [\n  {\n      category:  'Work',\n      imgUrl: 'https://www.freepik.com/blog/app/uploads/2017/10/svg-previa.jpg',\n  },\n  {\n      category: 'Fun',\n      imgUrl:  \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQMvw26w2i8FfL7_Kr4tZ3CqBOXHLVovHyJDQ&usqp=CAU\", \n  },\n  {\n      category: 'Sports',\n      imgUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Sport_balls.svg/1200px-Sport_balls.svg.png\"\n  },\n  {\n      category: 'Music',\n      imgUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/Musical_notes.svg/1280px-Musical_notes.svg.png\"\n  },\n  {\n      category: 'SelfImprov',\n      imgUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjZfVulolQIcCtP-m2OpHUW90cHenKKY8byg&usqp=CAU\"\n  },\n  {\n      category: \"Other\",\n      imgUrl: \"https://firebasestorage.googleapis.com/v0/b/myspace-ec3c9.appspot.com/o/64c35da8ce05400291f6eaf561d1acea.png?alt=media&token=b517a4e5-06e2-49f7-a224-801cfac3c6a7\"\n  },   \n  {\n      category: \"Love\",\n      imgUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ2-HdyIn2FRLRBmtL9O2EYw4-2Fz4cHVYG6g&usqp=CAU\"\n  },   \n\n\n]\n","import React, { useState, useEffect, createContext } from \"react\";\nimport { VERIFY_TOKEN } from \"../../services/constants\";\n\nexport const AuthContext =  createContext();\n\n\nconst ProvideAuth = ({ children }) => {\n  const [authState, setAuthState] = useState(null);\n  const [loading, setLoading]=useState(true);\n  const [user, setUser] = useState(null);\n\n  const getAuthentication = async () => {\n    const token = window.localStorage.getItem('token');\n    const userObj = window.localStorage.getItem('user');\n    const user = JSON.parse(userObj);\n    if(token){\n      setLoading(true);\n      const response = await fetch(`${VERIFY_TOKEN}/${token}`);\n      setAuthState(response.status === 200); \n      setUser(user);\n      setLoading(false);\n    }\n    else{\n      setAuthState(false);\n    }\n  }\n  useEffect(()=>{\n    getAuthentication();\n  },[]);\n  \n  return (\n    <AuthContext.Provider value={{authenticated: authState, loading, setAuthState, user, setUser}}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default ProvideAuth;\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst MessageComponent = props => {\n  const classes = useStyles();\n  const { messageContent, setMessagePopupState } = props;\n\n  const [open, setOpen] = React.useState(props.open);\n\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n    setMessagePopupState(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message={messageContent}\n      />\n    </div>\n  );\n}\n\n\nexport default MessageComponent;","import React, { useState, useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\nimport { SIGNIN_URL } from '../services/constants';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../components/auth/ProvideAuth';\nimport MessageComponent from '../components/MessageComponent';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      {/* <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '} */}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    backgroundColor: '#fff',\n    border: '1px solid #ddd',\n    padding: '20px',\n    boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n    borderRadius: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: 'black',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: 'black',\n    \"&:hover\" : { backgroundColor: \"darkgreen\"}\n  },\n}));\n\nexport default function SignIn() {\n  const history = useHistory();\n  const contextValue = useContext(AuthContext);\n  const { setAuthState, setUser } = contextValue;\n  const classes = useStyles();\n  const [credentialState, setCredentialState] = useState({\n    email: '',\n    password: ''\n  });\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage ] = useState('');\n\n  const formChangeHandler = event => {\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n    setCredentialState({...credentialState, [fieldName]: fieldValue});\n  }\n\n  const formSubmitHandler = async event => {\n    event.preventDefault();\n    const apiParams = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(credentialState)\n    }\n    const response = await fetch(SIGNIN_URL, apiParams);\n    if(!response.ok){\n      console.log('Response Status', response.status);\n      console.log('Response Text', await response.text());\n      setMessage('Unable to log you in')\n      setMessagePopupState(true);\n    }\n    else{\n      const resp = await response.json();\n      window.localStorage.setItem('token', resp.token);\n\n      //Need to figure out a solution, not sure if its good idea to store the user in local storage\n      window.localStorage.setItem('user', JSON.stringify(resp.user));\n      setAuthState(true);\n      setUser(resp.user);\n      setTimeout(()=>{\n        history.push('/clubs');\n      }, 500);\n    }\n  } \n\n\n  return (\n    <React.Fragment>\n    {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState}/>}\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={formChangeHandler}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={formChangeHandler}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={formSubmitHandler}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to={'/signup'} variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n    </React.Fragment>\n  );\n}","import React, { useContext } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GroupSharpIcon from '@material-ui/icons/GroupSharp';\nimport AddCircleOutlinedIcon from '@material-ui/icons/AddCircleOutlined';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../components/auth/ProvideAuth';\n\n\nexport const MainListItems = props => {\n  const context = useContext(AuthContext);\n  const { user } = context;\n\n  return (\n    <div>\n      <ListItem button component={Link} to={\"/clubs\"}>\n        <ListItemIcon>\n          <GroupSharpIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Clubs\" />\n      </ListItem>\n      {user.role === 'admin' && (\n      <ListItem button component={Link} to={\"/club/form/new\"}>\n        <ListItemIcon>\n          <AddCircleOutlinedIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"New Club\" />\n      </ListItem>)}\n      {user.role === 'participant' && (\n        <ListItem button component={Link} to={\"/user/events\"}>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"My Events\" />\n        </ListItem>\n      )}\n\n      {/* <ListItem button>\n      <ListItemIcon>\n        <AccountCircleOutlinedIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Users\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"News\" />\n    </ListItem> */}\n    </div>\n  )\n};\n\nexport const secondaryListItems = (\n  <div>\n    {/* <ListSubheader inset>Saved Items</ListSubheader> */}\n    {/* <ListItem button component={Link} to={\"/users/clubs\"}>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"My Clubs\" />\n    </ListItem> */}\n    {/* <ListItem button component={Link} to={\"/user/events\"}>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"My Events\" />\n    </ListItem> */}\n  </div>\n);","import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { MainListItems, secondaryListItems } from '../services/listItems';\nimport { AuthContext } from '../components/auth/ProvideAuth';\nimport { useHistory } from 'react-router-dom';\nimport { CircularProgress } from '@material-ui/core';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: '10px',\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    backgroundColor: 'black',\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 0,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: '#eee',\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n    backgroundColor: '#fff',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n    // backgroundColor:'#303030'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard(props) {\n  const history = useHistory();\n  const contextValue = useContext(AuthContext);\n  const { setAuthState, setUser, user, loading } = contextValue;\n  const { component: Component } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const logout = () => {\n    setAuthState(false);\n    setUser(null);\n    window.localStorage.removeItem('user');\n    window.localStorage.removeItem('token');\n    history.push('/signin');\n  }\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress /> : (\n        <React.Fragment>\n          <div className={classes.root}>\n            {/* <CssBaseline /> */}\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n              <Toolbar className={classes.toolbar}>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Typography component=\"h4\" variant=\"h4\" color=\"inherit\" noWrap className={classes.title}>\n                  Unified Club Portal\n                </Typography>\n\n                <IconButton color=\"inherit\">\n                  <PersonIcon />\n                  <Typography component=\"h6\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                    Hello, {user.name}!\n                  </Typography>\n\n                </IconButton>\n                <IconButton color=\"inherit\" onClick={logout}>\n                  <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                    Logout\n                  </Typography>\n                </IconButton>\n\n              </Toolbar>\n            </AppBar>\n            <Drawer\n              variant=\"permanent\"\n              classes={{\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n              }}\n              open={open}\n            >\n              <div className={classes.toolbarIcon}>\n                <IconButton onClick={handleDrawerClose}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n              <List>{<MainListItems/>}</List>\n              <Divider />\n              <List>{secondaryListItems}</List>\n            </Drawer>\n            <main className={classes.content}>\n              <div className={classes.appBarSpacer} />\n              <Container maxWidth=\"lg\" className={classes.container}>\n                <Component></Component>\n              </Container>\n            </main>\n          </div>\n        </React.Fragment>\n      )}\n\n    </React.Fragment>\n  );\n}","import React, { useState, useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\nimport { SIGNIN_URL } from '../services/constants';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../components/auth/ProvideAuth';\nimport MessageComponent from '../components/MessageComponent';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      {/* <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '} */}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    backgroundColor: '#eff',\n    border: '1px solid #ddd',\n    padding: '20px',\n    boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n    borderRadius: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const history = useHistory();\n  const contextValue = useContext(AuthContext);\n  const { setAuthState, setUser } = contextValue;\n  const classes = useStyles();\n  const [credentialState, setCredentialState] = useState({\n    email: '',\n    password: ''\n  });\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage ] = useState('');\n\n  const formChangeHandler = event => {\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n    setCredentialState({...credentialState, [fieldName]: fieldValue});\n  }\n\n  const formSubmitHandler = async event => {\n    event.preventDefault();\n    const apiParams = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(credentialState)\n    }\n    const response = await fetch(SIGNIN_URL, apiParams);\n    if(!response.ok){\n      console.log('Response Status', response.status);\n      console.log('Response Text', await response.text());\n      setMessage('Unable to log you in')\n      setMessagePopupState(true);\n    }\n    else{\n      const resp = await response.json();\n      window.localStorage.setItem('token', resp.token);\n\n      //Need to figure out a solution, not sure if its good idea to store the user in local storage\n      window.localStorage.setItem('user', JSON.stringify(resp.user));\n      setAuthState(true);\n      setUser(resp.user);\n      setTimeout(()=>{\n        history.push('/clubs');\n      }, 500);\n    }\n  } \n\n\n  return (\n    <React.Fragment>\n    {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState}/>}\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={formChangeHandler}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={formChangeHandler}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={formSubmitHandler}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to={'/signup'} variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n    </React.Fragment>\n  );\n}\n","import { useContext } from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport { AuthContext } from './ProvideAuth';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const contextValue = useContext(AuthContext);\n  return (\n    <div>\n\n    {contextValue.authenticated == null && contextValue.loading ? <CircularProgress/> : (<Route\n        {...rest}\n        render={({ location }) =>\n          contextValue.authenticated ? (\n            <Component></Component>\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/signin\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />)}\n    </div>\n  );\n}\n\nexport default PrivateRoute;\n","export const getToken = () => {\n  return  window.localStorage.getItem('token');\n}","export const validateEmail = email => {\n  return !!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email));\n};\n\nexport const validateContact = contact => {\n  return contact.length === 10;\n};\n\nexport const isEmpty = str => {\n  return (!str || str.length === 0 );\n};\n\nexport const isBlank = str => {\n  return (!str || /^\\s*$/.test(str));\n};","import { getToken } from \"./authServices\";\nimport { CLUB_LIST_URL, NEW_CLUB_URL, CLUB_ENROLL_URL, CLUB_LEAVE_URL } from \"./constants\"\nimport { isEmpty, isBlank } from \"./validationFunctions\";\n\nexport const fetchClubList = async () => {\n\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': `${token}`\n    },\n  }\n  const response = await fetch(CLUB_LIST_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n}\n\nexport const saveClub = async club => {\n  const token = getToken();\n  const apiParams = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'authorization': `${token}`,\n    },\n    body: JSON.stringify(club)\n  }\n  const response = await fetch(NEW_CLUB_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n} \n\nexport const fetchClubDetails = async (clubId) => {\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      'authorization': `${token}`\n    }\n  };\n  const url = `${NEW_CLUB_URL}/${clubId}`;\n  const response = await  fetch(url, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n}\n\nexport const enrollMemberInClub = async (userId, clubId) => {\n  const token = getToken();\n  const apiParams = {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify({userId, clubId})\n  };\n\n  const response = await fetch(CLUB_ENROLL_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n}\n\nexport const removeMemberFromClub = async (userId, clubId) => {\n  const token = getToken();\n  const apiParams = {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify({userId, clubId})\n  };\n  const response = await fetch(CLUB_LEAVE_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n}\n\nexport const validateClubObject = club => {\n  const {name, desc, memberCapacity, clubType} = club;\n  const errors = [];\n  if(isEmpty(name) || isBlank(name)){\n    errors.push('Name cannot be blank');\n  } \n  if(isEmpty(desc) || isBlank(desc)){\n    errors.push('Description cannot be blank');\n  } \n  if(memberCapacity <= 10){\n    errors.push('Member Capacity must be greater than 10');\n  } \n  if(isEmpty(clubType) || isBlank(clubType)){\n    errors.push('Club Type cannot be blank');\n  } \n  return errors; \n\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { useHistory } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"10px\",\n    borderRadius: \"16px\",\n    transition: \"0.3s\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\n    },\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n    \"&:hover\": {\n      cursor: \"pointer\"\n    },\n  },\n  go_to: {\n    marginLeft: \"auto\",\n    border: \"1px solid darkgrey\",\n    color: \"darkblue\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n    marginRight: \"0\",\n  },\n  title: {\n    display: \"flex\",\n  }\n}));\n\nconst ClubCard = props => {\n  const history = useHistory();\n  const classes = useStyles();\n  const { name, desc, _id, clubType } = props.club;\n\n  const redirectToClubsData = () => {\n    setTimeout(() => {\n      history.push(`/club/${_id}`);\n    }, 500);\n  };\n\n  let mediaImage = '';\n  switch(clubType){\n    case 'Music':\n        mediaImage = 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/Musical_notes.svg/1280px-Musical_notes.svg.png';\n        break;\n    case 'Sports':\n      mediaImage = 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Sport_balls.svg/1200px-Sport_balls.svg.png';\n      break;\n    case 'SelfImprov':\n      mediaImage = '\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjZfVulolQIcCtP-m2OpHUW90cHenKKY8byg&usqp=CAU';\n      break;\n    case 'Fun':\n      mediaImage = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQMvw26w2i8FfL7_Kr4tZ3CqBOXHLVovHyJDQ&usqp=CAU';\n      break;\n    default: \n      mediaImage = 'https://thumbs.dreamstime.com/z/neon-sign-word-club-dark-background-background-your-design-greeting-card-banner-neon-sign-word-club-dark-150811899.jpg';\n      break; \n  }\n\n  \n  \n  return (\n    <Box className={classes.root}>\n      <Card>\n        <CardHeader\n          classes={{ title: classes.title}}\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              {name[0]}\n            </Avatar>\n          }\n          title={name}\n        />\n        <CardMedia\n          className={classes.media}\n          image={mediaImage}\n          title=\"Club\"\n          onClick={redirectToClubsData}\n        />\n\n        <CardContent style={{ textAlign: \"left\" }}>\n          <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n            {desc}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            aria-label=\"go to club\"\n            className={classes.go_to}\n            color=\"secondary\"\n            size=\"medium\"\n            onClick={redirectToClubsData}\n          >\n            <ArrowForwardIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n\nexport default ClubCard;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { fetchClubList } from \"../services/clubServices\";\nimport ClubCard from '../components/club/ClubCard';\nimport MessageComponent from \"../components/MessageComponent\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n    grid_card: {\n      padding: '10px'\n    }\n  }),\n);\n\nexport default function ClubGrid() {\n  const [clubList, setClubList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n\n\n  const styles = useStyles();\n\n\n  useEffect(() => {\n    async function getClublist() {\n      const response = await fetchClubList();\n      if (response.status === 200) {\n        setClubList(response.data.data);\n        setLoading(false);\n      }\n      else if (response.status === 500) {\n        console.log(response.data.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n        setLoading(false);\n      }\n    }\n    getClublist();\n  }, []);\n\n  return (\n    <div>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <>\n          {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState} />}\n          <div>\n            <Grid\n              key=\"outerGrid\"\n              className={styles.root}\n              container justify=\"center\"\n            >\n              {clubList.map((club) => {\n                return (\n                  <Grid key={`innerGrid-${club['_id']}`} item xs={12} md={3}>\n                    <div className={styles.grid_card}\n                      key={club.id}\n                    >\n                      <ClubCard club={club} />\n                    </div>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\n\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport {\n  CircularProgress,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport { isBlank, isEmpty } from '../services/validationFunctions';\nimport { saveClub, validateClubObject, fetchClubDetails } from '../services/clubServices';\nimport { useHistory, useParams } from 'react-router-dom';\nimport MessageComponent from '../components/MessageComponent';\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  root: {\n    minWidth: 275,\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(5),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(0),\n    minWidth: 120,\n  },\n}));\n\n\n\nconst ClubForm = props => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [clubState, setClubState] = useState({\n    name: '',\n    desc: '',\n    memberCapacity: null,\n    clubType: '',\n    members: [],\n    otheClubType: '',\n    events: []\n  })\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const { id } = useParams();\n\n\n  useEffect(() => {\n    const getClubDetails = async () => {\n      setLoading(true);\n      const response = await fetchClubDetails(id);\n      if (response.status === 200) {\n        setClubState(response.data.data);\n        setLoading(false);\n      }\n      else if (response.status === 412) {\n        setMessage(response.data.message);\n        setMessagePopupState(true);\n      }\n      else if(response.status === 500){\n        console.log(response.data.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    };\n    if (id !== 'new' && id !== null && id !== undefined && id !== '') {\n      getClubDetails(id);\n      setIsUpdate(true);\n    }\n    else {\n      setLoading(false);\n    } // eslint-disable-next-line\n  }, []);\n\n\n\n  const formChangeHandler = event => {\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n    setClubState({ ...clubState, [fieldName]: fieldValue });\n  }\n\n  const formSubmitHandler = async event => {\n    const { name, desc, memberCapacity, clubType, members, otherClubType } = clubState;\n    let finalClubType;\n    if ((isBlank(clubType) || isEmpty(clubType)) && otherClubType !== '') {\n      finalClubType = otherClubType;\n    }\n    else {\n      finalClubType = clubType;\n    }\n    const club = {\n      name,\n      desc,\n      memberCapacity,\n      clubType: finalClubType,\n      members\n    };\n    const errors = validateClubObject(club);\n    if (errors.length === 0) {\n      if(isUpdate){\n        club['_id'] = id;\n      }\n      const response = await saveClub(club);\n      if (response.status === 201) {\n        console.log('Club Creation successfull');\n        setMessage('Club Creation Successfull');\n        setMessagePopupState(true);\n        redirectToDashboard();\n      }\n      else if(response.status === 500) {\n        console.log(response.data.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    }\n    else {\n      console.log(errors[0]);\n      setMessage(errors[0]);\n      setMessagePopupState(true);\n    }\n\n  }\n  const redirectToDashboard = () => {\n    setTimeout(() => {\n      history.push('/clubs');\n    }, 500);\n  }\n\n  const redirectToClub = () => {\n    setTimeout(() => {\n      history.push(`/club/${clubState['_id']}`);\n    }, 500);\n  }\n\n  const { name, desc, memberCapacity, clubType } = clubState;\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress /> : (\n        <div >\n          {messagePopupState && (<MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState}/>)}\n        <main className={classes.layout}>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"primary\">\n                {`${isUpdate ? 'Update': 'New'} Club`} \n              </Typography>\n              <Grid container spacing={3}>\n                <Grid item xs={12} >\n                  <TextField\n                    required\n                    value={name}\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Club Name\"\n                    fullWidth\n                    autoComplete=\"given-name\"\n                    onChange={formChangeHandler}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    value={desc}\n                    id=\"desc\"\n                    name=\"desc\"\n                    label=\"Description\"\n                    fullWidth\n                    autoComplete=\"shipping address-line1\"\n                    onChange={formChangeHandler}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    value={memberCapacity}\n                    id=\"capacity\"\n                    name=\"memberCapacity\"\n                    label=\"Member Capacity\"\n                    fullWidth\n                    autoComplete=\"shipping address-line2\"\n                    onChange={formChangeHandler}\n                  />\n                </Grid>\n                <Grid item xs={12} >\n                  <FormControl className={classes.formControl} fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={clubType}\n                      onChange={formChangeHandler}\n                      name=\"clubType\"\n                      className={classes.formControl}\n                    >\n                      <MenuItem value={\"Work\"}>Work</MenuItem>\n                      <MenuItem value={\"Fun\"}>Fun</MenuItem>\n                      <MenuItem value={\"Sports\"}>Sports</MenuItem>\n                      <MenuItem value={\"Music\"}>Music</MenuItem>\n                      <MenuItem value={\"Love\"}>Love</MenuItem>\n                      <MenuItem value={\"SelfImprov\"}>Self Improvment</MenuItem>\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\n                    </Select>\n                    {clubState.otherClubType === \"Other\" ? (\n                      <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        fullWidth\n                        value={clubState.otherCategory}\n                        name=\"otherClubType\"\n                        label=\"Catogory\"\n                        id=\"other cateogry\"\n                        required\n                      />\n                    ) : null}\n                  </FormControl>\n                </Grid>\n              </Grid>\n            </CardContent>\n            <CardActions>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  variant=\"contained\"\n                  onClick={isUpdate ? redirectToClub : redirectToDashboard}\n                >\n                  Back to {`${isUpdate ? 'Club' : 'Dashboard'}`}\n                </Button>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={formSubmitHandler}>\n                  Create\n                </Button>\n              </Grid>\n            </CardActions>\n\n          </Card>\n        </main>\n        </div>\n      )\n        }\n    </React.Fragment>\n  );\n}\n\n\nexport default ClubForm;\n\n","import React from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: \"center\",\n    boxShadow:\n      \"rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst ClubInfo = props => {\n  const classes = useStyles();\n  const { club } = props;\n\n  return (\n    <React.Fragment>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Typography component=\"h3\" variant=\"h4\" color=\"primary\" key=\"name\">\n            {club.name}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            component=\"p\"\n            key=\"desc\"\n            color=\"secondary\"\n            className={classes.pos}\n          >\n            {club.desc}\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            style={{ color: \"darkslategrey\" }}\n            key=\"memberCapacity\"\n          >\n            Capacity : {club.memberCapacity}\n          </Typography>\n          <Typography variant=\"h6\" style={{ color: \"darkslategrey\" }}>\n            <i>Enrolled</i> <b>{club.members.length}</b>\n          </Typography>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default ClubInfo;\n","import { getToken } from \"./authServices\"\nimport { USER_LIST_URL } from './constants';\n\nexport const fetchUserList = async ids => {\n  const token = getToken();\n  const apiParams = { \n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify({ids})\n  };\n  const response = await fetch(USER_LIST_URL, apiParams);\n  const resp = await response.json();\n  return resp;\n}","import React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchUserList } from '../../services/userServices';\nimport { red } from '@material-ui/core/colors';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { CircularProgress } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    margin: '10px',\n    borderRadius: '10px',\n    padding: '10px',\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\n    display: 'inline-flex',\n    alignItems: 'center'\n  },\n  inline: {\n    display: 'inline',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  listItem: {\n    boxShadow: 'rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset'\n  },\n  questionFieldStyling: {\n    margin: '0 0 20px 0',\n    color: '#009688',\n  },\n}));\n\n\nconst UserList = props => {\n  const classes = useStyles();\n  const { ids } = props;\n  const [userList, setUserList] = useState(); //Array of user Objects\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getUser = async () => {\n      setLoading(true);\n      const response = await fetchUserList(ids || []);\n      if (response.success === true) {\n        setUserList(response.data);\n        setLoading(false);\n      }\n      else {\n        console.log('Error', response.errors);\n      }\n    };\n    getUser();\n  }, [ids]);\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress /> : (\n        <Card className ={classes.listItem}>\n          <CardHeader\n            title={props.titleText}\n          />\n          {userList.length > 0 ? (\n            <List>\n            {userList.map(user => {\n              return (\n                  <ListItem className={classes.root} alignItems=\"flex-start\" key={user['_id']}>\n                    <ListItemAvatar>\n                      <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                        {user.name[0]}\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={user.name}\n                    />\n                  </ListItem>\n                );\n            })}\n          </List>\n          ): (\n            <div className={classes.questionFieldStyling}>\n                <Typography component=\"h5\" variant=\"h5\" key=\"name\">\n                  {props.emptyText}\n                </Typography>\n              </div>\n          )}\n          \n        </Card>)}\n    </React.Fragment>\n  );\n}\n\nexport default UserList;\n","import { getToken } from \"./authServices\"\nimport { EVENT_LIST_URL, NEW_EVENT_URL, EVENT_REGISTER_URL, NEW_FEEDBACK } from './constants';\nimport { isBlank, isEmpty } from \"./validationFunctions\";\n\n// export const createNewEvent = async event => {\n//   const token = getToken();\n//   const apiParams = {\n//     method: 'POST',\n//     headers: {\n//       'content-type': 'application/json',\n//       'authorization': `${token}`\n//     },\n//     body: JSON.stringify(event)\n//   };\n//   const response = await fetch(NEW_EVENT_URL, apiParams);\n//   const resp = await response.json();\n//   return resp;\n// }\n\nexport const saveEvent = async event => {\n  const token = getToken();\n  const formData = new FormData();\n  const headers = new Headers();\n  headers.append('authorization', `${token}`);\n  const { name, desc, from, to, eventPoster, capacity, clubId, venue } = event;\n  formData.append('file', eventPoster);\n  formData.append('name', name);\n  formData.append('clubId', clubId);\n  formData.append('desc', desc)\n  formData.append('from', from)\n  formData.append('to', to);\n  formData.append('capacity', capacity);\n  formData.append('venue', venue);\n  if (event['_id']) {\n    formData.append('_id', event['_id']);\n  }\n  const apiParams = {\n    method: 'POST',\n    headers,\n    body: formData\n  };\n  const response = await fetch(NEW_EVENT_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp,\n  }\n}\n\nexport const fetchEventList = async ids => {\n  const token = getToken();\n  const apiParams = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify({ ids })\n  };\n  const response = await fetch(EVENT_LIST_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp,\n  }\n}\n\nexport const fetchEventDetails = async id => {\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    }\n  };\n  const url = `${NEW_EVENT_URL}/${id}`;\n  const response = await fetch(url, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp,\n  }\n}\n\nexport const registerUser = async (userId, eventId) => {\n  const token = getToken();\n  const apiParams = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify({ userId, eventId })\n  }\n  const response = await fetch(EVENT_REGISTER_URL, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp,\n  }\n}\n\nexport const validateEventObject = event => {\n  const { name, desc, capacity, from, to, venue } = event;\n  const errors = [];\n  if (isBlank(name) || isEmpty(name)) {\n    errors.push('Name Cannot be Blank');\n  }\n  if (isBlank(desc) || isEmpty(desc)) {\n    errors.push('Description Cannot be Blank');\n  }\n  if (isBlank(venue) || isEmpty(venue)) {\n    errors.push('Venue Cannot be Blank');\n  }\n  if (capacity <= 1) {\n    errors.push('Capacity must be greater than 1');\n  }\n  if (!to || !from) {\n    errors.push('Field Cannot be empty');\n  }\n  else {\n    const toTimeStamp = new Date(to).getTime();\n    const fromTimeStamp = new Date(from).getTime();\n    if (toTimeStamp < fromTimeStamp) {\n      errors.push('Date must be after start date');\n    }\n  }\n  return errors;\n}\n\n\nexport const getEventStatus = (startDate, endDate) => {\n  const currentTime = new Date().getTime();\n  const startTime = new Date(startDate).getTime();\n  const endTime = new Date(endDate).getTime();\n  if (currentTime + 7200000 >= startTime && currentTime + 7200000 < endTime) {\n    return 0;\n  }\n  // UPCOMING EVENT\n  else if (currentTime + 7200000 < startTime) {\n    return -1;\n  }\n  // ENDED EVENT\n  else if (currentTime > endTime) {\n    return 2;\n  }\n  // IN PROGRESS\n  else if (currentTime > startTime && currentTime < endTime) {\n    return 1;\n  }\n}\n\nexport const sendUserFeedback = async feedback => {\n  const token = getToken();\n  const apiParams = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    },\n    body: JSON.stringify(feedback)\n  }\n  const response = await fetch(NEW_FEEDBACK, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  };\n}\n\n\nexport const getUserFeedbackForEvent = async(userId, eventId) => {\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    },\n  }\n  const url = `${NEW_FEEDBACK}/${userId}/${eventId}`;\n  const response = await fetch(url, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  };\n}\n\nexport const getFeedbacksForEvent = async eventId => {\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    }\n  }\n  const url = `${NEW_FEEDBACK}/${eventId}`;\n  const response = await fetch(url, apiParams);\n  const resp = await response.json();\n  return {\n    status: response.status,\n    data: resp\n  }\n}\n\nexport const validateFeedbackObject = feedback => {\n  const { comments } = feedback;\n  const errors = [];\n  if(comments.length>200){\n    errors.push('Please keep comments under 200 words...');\n  }\n  return errors;\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { getEventStatus } from \"../../services/eventServices\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n    border: \"1px solid #ddd\",\n    margin: \"10px 5px\",\n    boxShadow: \"none\",\n  },\n  cardDetails: {\n    flex: 1,\n    display: \"flex\",\n    textAlign: \"left\",\n    justifyContent: \"flex-start\",\n  },\n  cardMedia: {\n    width: 250,\n  },\n  cardAction: {\n    \"&hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  chip_start: {\n    backgroundColor: \"green\",\n    marginBottom: \"10px\",\n  },\n  chip_end: {\n    backgroundColor: \"red\",\n    marginBottom: \"10px\",\n  },\n});\n\nexport default function FeaturedPost(props) {\n  const classes = useStyles();\n  const { event } = props;\n  const { name, desc, capacity, from, to } = event;\n  const status = getEventStatus(from, to);\n  var statusText = \"UPCOMING\",\n    statusClass = status === 2 ? classes.chip_end : classes.chip_start;\n\n  if (status === 1) statusText = \"ON-GOING\";\n  else if (status === 2) statusText = \"ENDED\";\n  const startDate = new Date(from);\n  const startDateString = `${startDate.getDate()}/${startDate.getMonth()}/${startDate.getFullYear()} ${startDate.getHours()}:${startDate.getMinutes()}`;\n\n  const toDate = new Date(to);\n  const toDateString = `${toDate.getDate()}/${toDate.getMonth()}/${toDate.getFullYear()} ${toDate.getHours()}:${toDate.getMinutes()} `;\n\n  return (\n    <Grid item>\n      <Card className={classes.card}>\n        <div className={classes.cardDetails}>\n          <CardContent>\n            <Typography component=\"h2\" variant=\"h5\">\n              {name}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {startDateString} to {toDateString}\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph>\n              {desc}\n              <br />\n              Capacity: {capacity}\n            </Typography>\n            <Chip\n              color=\"secondary\"\n              size=\"small\"\n              label={statusText}\n              className={statusClass}\n            />\n          </CardContent>\n        </div>\n        <Hidden xsDown>\n          <CardMedia\n            className={classes.cardMedia}\n            image=\"https://d1csarkz8obe9u.cloudfront.net/posterpreviews/zoom-background%2C-event%2Cpresentation-design-template-69f11bda0c4d7c9ccb155035a05493d9_screen.jpg?ts=1598358685\"\n            title={name}\n          />\n        </Hidden>\n      </Card>\n    </Grid>\n  );\n}\n\nFeaturedPost.propTypes = {\n  post: PropTypes.object,\n};\n","import React, { useState, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchEventList } from '../../services/eventServices';\nimport { red } from '@material-ui/core/colors';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport EventCard from './EventCard';\nimport { useHistory } from 'react-router';\nimport MessageComponent from '../MessageComponent';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    boxShadow: 'rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset'\n  },\n  root: {\n    margin: 'auto',\n  },\n  inline: {\n    display: 'inline',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  questionFieldStyling: {\n    margin: '0 0 20px 0',\n    color: '#009688',\n  },\n}));\n\n\nconst EventList = props => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { ids } = props;\n  const [eventList, setEventList] = useState(); //Array of user Objects\n  const [loading, setLoading] = useState(true);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const response = await fetchEventList(ids || []);\n      if (response.status === 200) {\n        setEventList(response.data.data);\n        setLoading(false);\n      }\n      else if (response.status === 500) {\n        console.log(response.data.errors[0]);\n        setMessage('Internal Server Error');\n        setMessage(true);\n      }\n    };\n    getData();\n  }, [ids]);\n\n  const redirectToEventData = id => {\n    history.push(`/event/${id}`)\n  }\n\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress /> : (\n        <div>\n          {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState} />}\n          <Card className={classes.card}>\n            <CardHeader\n              title='Events'\n            />\n            {eventList.length > 0 ? (\n              <List className={classes.root}>\n                {eventList.map(event => {\n                  return (\n\n                    <ListItem alignItems=\"flex-start\" key={event['_id']}>\n                      <Button\n                        onClick={() => { redirectToEventData(event['_id']) }}\n                      >\n                        <EventCard event={event} />\n                      </Button>\n                    </ListItem>);\n                })}\n              </List>\n            ) : (\n              <div className={classes.questionFieldStyling}>\n                <Typography component=\"h5\" variant=\"h5\" key=\"name\">\n                  Coming soon!\n                </Typography>\n              </div>\n            )}\n\n          </Card>\n        </div>)}\n    </React.Fragment>\n  );\n}\n\nexport default EventList;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ClubInfo from \"../components/club/ClubInfo\";\nimport UserList from \"../components/user/UserList\";\nimport EventList from \"../components/event/EventList\";\nimport {\n  fetchClubDetails,\n  enrollMemberInClub,\n  removeMemberFromClub,\n} from \"../services/clubServices\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport EditSharpIcon from \"@material-ui/icons/EditSharp\";\nimport { AuthContext } from \"../components/auth/ProvideAuth\";\nimport { useHistory } from \"react-router\";\nimport MessageComponent from \"../components/MessageComponent\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  buttonGroup: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    margin: \"10px 0 25px\",\n  },\n  enrollButton: { marginRight: \"5px\", backgroundColor: \"purple\" },\n  editButton: {\n    marginRight: \"5px\",\n    backgroundColor: \"darkorange\",\n    color: \"white\",\n    \"&:hover\": { color: \"black\", backgroundColor: \"orange\" },\n  },\n  orgEventButton: {\n    marginRight: \"5px\",\n    backgroundColor: \"darkgreen\",\n    color: \"white\",\n    \"&:hover\": { color: \"black\", backgroundColor: \"lightgreen\" },\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst ClubData = props => {\n  const contextValue = useContext(AuthContext);\n  const { user } = contextValue;\n  let { id } = useParams();\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [clubState, setClubState] = useState();\n  const [loading, setLoading] = useState(true);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    const getClubDetails = async () => {\n      setLoading(true);\n      const response = await fetchClubDetails(id);\n      if (response.status === 200) {\n        setClubState(response.data.data);\n        setLoading(false);\n      } else if (response.message) {\n        window.alert(response.message);\n      } else if (response.status === 500) {\n        console.log(response.data.errors);\n        setMessage(\"Internal Server Error\");\n        setMessagePopupState(true);\n      }\n    };\n\n    getClubDetails();\n  }, [id]);\n\n  const enrollHandler = async () => {\n    const response = await enrollMemberInClub(user[\"_id\"], id);\n    if (response.status === 200) {\n      setClubState(response.data.data);\n      setMessage(\"Enrolled Successfully\");\n      setMessagePopupState(true);\n    } else if (response.status === 500) {\n      console.log(response.data.errors);\n      setMessage(\"Inernal Server Error\");\n      setMessagePopupState(true);\n    } else if (response.status === 412) {\n      console.log(response.data.message);\n      setMessage(response.data.message);\n      setMessagePopupState(true);\n    }\n  };\n\n  const leaveClubHandler = async () => {\n    const userObj = window.localStorage.getItem(\"user\");\n    const user = JSON.parse(userObj);\n    const response = await removeMemberFromClub(user[\"_id\"], id);\n    if (response.status === 200) {\n      setClubState(response.data.data);\n      setMessage(\"You have left the club\");\n      setMessagePopupState(true);\n    } else if (response.status === 500) {\n      console.log(response.data.errors);\n      setMessage(\"Inernal Server Error\");\n      setMessagePopupState(true);\n    }\n  };\n\n  const redirectToNewEventForm = () => {\n    history.push(`/event/new/${clubState[\"_id\"]}/new`);\n  };\n\n  const redirectToUpdateClubForm = () => {\n    history.push(`/club/form/${clubState[\"_id\"]}`);\n  };\n\n  const isUserAlreadyEnrolled = clubState?.members.includes(user[\"_id\"]);\n  const clubButtonObj = isUserAlreadyEnrolled\n    ? {\n        handler: leaveClubHandler,\n        startIcon: <RemoveCircleIcon />,\n        text: \"Leave\",\n      }\n    : {\n        handler: enrollHandler,\n        startIcon: <AddCircleOutlineIcon />,\n        text: \"Enroll\",\n      };\n  return (\n    <React.Fragment>\n      {messagePopupState && (\n        <MessageComponent\n          open={message}\n          messageContent={message}\n          setMessagePopupState={setMessagePopupState}\n        />\n      )}\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <>\n          <Grid container className={classes.root}>\n            <Grid item xs={12}>\n              <Grid\n                container\n                justifyContent=\"center\"\n                spacing={5}\n                alignItems=\"center\"\n              >\n                <Grid key=\"club-info\" item xs={12}>\n                  <ClubInfo club={clubState} />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid container item className={classes.buttonGroup}>\n              {user.role === \"participant\" && (\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.enrollButton}\n                  onClick={clubButtonObj.handler}\n                  startIcon={clubButtonObj.startIcon}\n                >\n                  {clubButtonObj.text}\n                </Button>\n              )}\n\n              {user.role === \"admin\" && (\n                <Button\n                  variant=\"contained\"\n                  startIcon={<EventIcon />}\n                  className={classes.orgEventButton}\n                  onClick={redirectToNewEventForm}\n                >\n                  Organize an Event\n                </Button>\n              )}\n              {user.role === \"admin\" && (\n                <Button\n                  variant=\"contained\"\n                  startIcon={<EditSharpIcon />}\n                  className={classes.editButton}\n                  onClick={redirectToUpdateClubForm}\n                >\n                  Edit Club\n                </Button>\n              )}\n            </Grid>\n\n            <Grid container item className={classes.root} spacing={3}>\n              <Grid item xs={6}>\n                <UserList ids={clubState.members} titleText=\"Registered Members\" emptyText=\"Enroll Now!\" />\n              </Grid>\n              <Grid item xs={6}>\n                <EventList xs={12} ids={clubState.events} club={clubState} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ClubData;\n","import { getToken } from \"./authServices\";\nimport { GET_RESOURCE_URL } from './constants';\n\nexport const fetchResource = async id => {\n  const token = getToken();\n  const apiParams = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `${token}`\n    }\n  }\n\n  const url = `${GET_RESOURCE_URL}/${id}`;\n  const response = await fetch(url, apiParams);\n  const resp = await response.json();\n  return ({\n    status: response.status,\n    data:resp\n  })\n}","import React, { useEffect, useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { saveEvent, validateEventObject, fetchEventDetails } from '../services/eventServices';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { fetchResource } from '../services/resourceServices'; \nimport { DB_URL } from '../services/constants';\nimport { CircularProgress } from '@material-ui/core';\nimport MessageComponent from '../components/MessageComponent';\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  root: {\n    minWidth: 275,\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(5),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(0),\n    minWidth: 120,\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 250,\n  },\n  input: {\n    display: 'none',\n  },\n  image: {\n    width: '100%',\n    height: '300px',\n    margin: 'auto',\n    flexGrow: 1,\n  },\n}));\n\n\n\nconst EventForm = props => {\n  const history = useHistory();\n  const classes = useStyles();\n  let { clubId, eventId } = useParams();\n\n  const [eventState, setEventState] = useState({\n    name: '',\n    desc: '',\n    capacity: 0,\n    participants: [],\n    to: null,\n    from: null,\n    eventPoster: null,\n    venue: '',\n    clubId,\n  });\n\n  const [image, setImage] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isUpdate, setIsUpdate ] = useState(false); \n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n\n  useEffect(()=>{\n    const getEventDetails = async id => {\n      setLoading(true);\n      const response = await fetchEventDetails(id);\n      if (response.status === 200) {\n        setEventState(response.data.data);\n        const { publicFiles } = response.data.data;\n        if (publicFiles.length > 0) {\n          const resourceResponse = await fetchResource(publicFiles[0]['_id']);\n          if (resourceResponse.status === 200) {\n            const { path } = resourceResponse.data.data;\n            setImage(`${DB_URL}/${path}`);\n          }\n          else if(resourceResponse.status === 500){\n            console.log(resourceResponse.errors);\n            setMessage('Failed to Load resource');\n            setMessagePopupState(true);\n          }\n        }\n        setLoading(false);\n      }\n      else if (response.status === 404) {\n        setMessage('Entity Not Found');\n        setMessagePopupState(true);\n      }\n      else if(response.status === 500){\n        console.log(response.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    };\n\n    if(eventId !== 'new' && eventId !== null && eventId !== undefined && eventId !== ''){\n      getEventDetails(eventId);\n      setIsUpdate(true);\n    }\n    else{\n      setLoading(false);\n    }\n    // eslint-disable-next-line\n  }, [])\n\n\n\n  const formChangeHandler = event => {\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n    setEventState({ ...eventState, [fieldName]: fieldValue });\n  }\n\n  const formChangeHandlerForImage = event => {\n    setImage(URL.createObjectURL(event.target.files[0]));\n    setEventState({ ...eventState, eventPoster: event.target.files[0] })\n  }\n\n  const formSubmitHandler = async event => {\n    const errors = validateEventObject(eventState);\n    if(errors.length ===0 ){\n      if(isUpdate){\n        setEventState({...eventState, '_id': eventId});\n      }\n      const response = await saveEvent(eventState);\n      console.log(response);\n      if (response.status === 201) {\n        setMessage(`Event ${isUpdate ? 'Updation': 'Creation'}`);\n        setMessagePopupState(true);\n        // window.alert('Event Creation Successfull');\n        redirectToClub();\n      }\n      else if(response.status === 404){\n        setMessage('Entity Not Found');\n        setMessagePopupState(true);\n      }\n      else if(response.status === 500){\n        console.log(response.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    }\n    else{\n      console.log(errors[0]);\n      setMessage(errors[0]);\n      setMessagePopupState(true);\n    }\n    \n  }\n  const redirectToClub = () => {\n    setTimeout(() => {\n      history.push(`/club/${clubId}`);\n    }, 500);\n  }\n\n\n  const clearImage = () => {\n    setImage(null);\n  }\n\n  const {name, desc, from, to, capacity, venue } = eventState;\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress/> : ( \n        <div>\n        {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState}/>}\n        {image && (<><img className={classes.image} src={image} alt=\"event\" /></>)}\n        <div className={classes.layout}>\n        <Card className={classes.root} variant=\"outlined\">\n          <CardContent>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\"  color=\"primary\">\n              {`${isUpdate? 'Update': 'New'} Event`}\n            </Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={12} >\n                <TextField\n                  required\n                  value={name}\n                  id=\"name\"\n                  name=\"name\"\n                  label=\"Event Name\"\n                  fullWidth\n                  autoComplete=\"given-name\"\n                  onChange={formChangeHandler}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  value={desc}\n                  id=\"desc\"\n                  name=\"desc\"\n                  label=\"Description\"\n                  fullWidth\n                  autoComplete=\"shipping address-line1\"\n                  onChange={formChangeHandler}\n\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  value={capacity}\n                  id=\"capacity\"\n                  name=\"capacity\"\n                  label=\"Capacity\"\n                  fullWidth\n                  autoComplete=\"shipping address-line2\"\n                  onChange={formChangeHandler}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  value={venue}\n                  id=\"venue\"\n                  name=\"venue\"\n                  label=\"Venue\"\n                  fullWidth\n                  autoComplete=\"shipping address-line1\"\n                  onChange={formChangeHandler}\n\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  value={isUpdate ? (from.split('.')[0]) : null}\n                  id=\"date\"\n                  label=\"Start Date\"\n                  name=\"from\"\n                  type=\"datetime-local\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={formChangeHandler}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  value={isUpdate ? (to.split('.')[0]): null}\n                  id=\"date\"\n                  label=\"End Date\"\n                  name=\"to\"\n                  type=\"datetime-local\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={formChangeHandler}\n                />\n              </Grid>\n\n              {!isUpdate && (<Grid item xs={12}>\n                <input\n                  className={classes.input}\n                  id=\"contained-button-file\"\n                  type=\"file\"\n                  accept=\".png, .jpg, .jpeg\"\n                  name=\"eventPoster\"\n                  onChange={formChangeHandlerForImage}\n                />\n                <label htmlFor=\"contained-button-file\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    component=\"span\"\n                  >\n                    Upload Event Poster\n                  </Button>\n                </label>\n              </Grid>)}\n              {image && !isUpdate && (\n                <React.Fragment>\n                  <Grid item xs={12}>\n                    <IconButton \n                      aria-label=\"delete\" \n                      className={classes.margin}\n                      onClick={clearImage}\n                    >\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Grid>\n                </React.Fragment>\n              )}\n            </Grid>\n          </CardContent>\n          <CardActions>\n            <Grid item xs={12} sm={6}>\n              <Button\n                variant=\"contained\"\n                onClick={redirectToClub}\n              >\n                Back to Club\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={formSubmitHandler}\n              >\n                {isUpdate ?'Update': 'Create'}\n              </Button>\n            </Grid>\n          </CardActions>\n\n        </Card>\n        </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\n\nexport default EventForm;","import React from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getEventStatus } from \"../../services/eventServices\";\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: \"center\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  chip_start: {\n    backgroundColor: \"green\",\n    marginBottom: \"10px\",\n  },\n  chip_end: {\n    backgroundColor: \"red\",\n    marginBottom: \"10px\",\n  },\n});\n\nconst EventInfo = props => {\n  const classes = useStyles();\n  const { event } = props;\n\n  const { name, desc, capacity, from, to } = event;\n  const status = getEventStatus(from, to);\n  var statusText = \"UPCOMING\",\n    statusClass = status === 2 ? classes.chip_end : classes.chip_start;\n\n  if (status === 1) statusText = \"ON-GOING\";\n  else if (status === 2) statusText = \"ENDED\";\n  const startDate = new Date(from);\n  const startDateString = `${startDate.getDate()}/${startDate.getMonth()}/${startDate.getFullYear()}   ${startDate.getHours()}:${startDate.getMinutes()}`;\n\n  const toDate = new Date(to);\n  const toDateString = `${toDate.getDate()}/${toDate.getMonth()}/${toDate.getFullYear()}   ${toDate.getHours()}:${toDate.getMinutes()} `;\n\n  return (\n    <React.Fragment>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Typography variant=\"h4\" color=\"primary\" key=\"name\">\n            {name}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            color=\"secondary\"\n            key=\"desc\"\n            className={classes.pos}\n          >\n            {desc}\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            style={{ color: \"darkslategrey\" }}\n            key=\"memberCapacity\"\n          >\n            Capacity : {capacity}\n          </Typography>\n          <Typography variant=\"h6\" style={{ color: \"darkslategrey\" }}>\n            <i>\n              <b>{startDateString}</b>\n            </i>{\" \"}\n            to{\" \"}\n            <i>\n              <b>{toDateString}</b>\n            </i>\n          </Typography>\n          <Chip\n              color=\"secondary\"\n              size=\"small\"\n              label={statusText}\n              className={statusClass}\n            />\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default EventInfo;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport { AuthContext } from '../auth/ProvideAuth';\nimport { getUserFeedbackForEvent, sendUserFeedback, validateFeedbackObject } from '../../services/eventServices';\nimport MessageComponent from '../MessageComponent';\nimport Typography from '@material-ui/core/Typography';\nimport {labels} from '../../services/constants';\n\nconst useStyles = makeStyles({\n  root: {\n    // width: 200,\n    display: 'flex',\n    alignItems: 'center',\n    height: 400,\n    padding: '10px',\n    // boxShadow: 'rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset',\n    border: 'solid',\n    borderColor: '#424242'\n  },\n  addHeight: {\n    height: 300\n  },\n  buttonStyling: {\n    padding: '10px'\n  },\n  ratingStyling: {\n    padding: '10px',\n    margin: 'auto',\n  },\n  textFieldStyling: {\n    width: '600px',\n    margin: 'auto',\n  },\n  questionFieldStyling: {\n    margin: 'auto',\n    color: '#009688',\n  },\n  ratingWidth: {\n    width: '220px'\n  }\n});\n\nconst RatingComponent = props => {\n  const contextValue = useContext(AuthContext);\n  const [hover, setHover] = useState(-1);\n  const [loading, setLoading] = useState(true);\n  const classes = useStyles();\n  const [message, setMessage] = useState('');\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [isFeedbackGiven, setIsFeedbackGiven] = useState(false);\n  const { eventId } = props;\n  const { user } = contextValue;\n  const [feedbackState, setFeedbackState] = useState({\n    value: 2,\n    comments: ''\n  });\n\n  useEffect(() => {\n    const getUserFeedback = async () => {\n      setLoading(true);\n      const response = await getUserFeedbackForEvent(user['_id'], eventId);\n      if (response.status === 200 && response.data.success === true) {\n        const { stars, comments } = response.data.data;\n        setFeedbackState({\n          value: stars,\n          comments\n        });\n        setIsFeedbackGiven(true);\n        setLoading(false);\n      }\n      else if (response.status === 500) {\n        console.log(response.data.errors[0]);\n        setMessagePopupState('Internal Server Error');\n        setMessagePopupState(true);\n      }\n      else if (response.status === 200 && response.data.success === false) {\n        setLoading(false);\n      }\n    }\n    getUserFeedback(); // eslint-disable-next-line\n  }, [])\n\n  const submitUserFeedback = async () => {\n    const feedback = {\n      eventId,\n      userId: user['_id'],\n      stars: value,\n      comments\n    };\n    const errors = validateFeedbackObject(feedback);\n    if (errors.length === 0) {\n      const response = await sendUserFeedback(feedback);\n      if (response.status === 201) {\n        const { stars, comments } = response.data.data;\n        setMessage('Feedback Submitted Successfully');\n        setMessagePopupState(true);\n        setFeedbackState({\n          value: stars,\n          comments\n        });\n        setIsFeedbackGiven(true);\n      }\n      else if (response.status === 409) {\n        setMessage('Your Feedback Already Exists');\n        setMessagePopupState(true);\n      }\n      else if (response.status === 500) {\n        console.log(response.data.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    }\n    else{\n      console.log(errors);\n      setMessage(errors[0]);\n      setMessagePopupState(true);\n    }\n\n  }\n\n  const onCommentsFieldChange = event => {\n    setFeedbackState({ ...feedbackState, comments: event.target.value });\n  }\n\n  const { value, comments } = feedbackState;\n  return (\n    <React.Fragment>\n      {loading ? <CircularProgress /> : (\n        <>\n          {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState} />}\n          <Card className={classes.root}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <div className={classes.questionFieldStyling}>\n                  <Typography component=\"h4\" variant=\"h4\" key=\"name\">\n                    {isFeedbackGiven ? 'Thank you for sharing your experience' : 'How was you Experience ? '}\n                  </Typography>\n                </div>\n              </Grid>\n              <div className={classes.ratingStyling}>\n                <Grid item container xs={12}>\n                  <Grid item xs={6}>\n                    <div className={classes.ratingWidth}>\n                      <Rating\n                        name=\"hover-feedback\"\n                        value={value}\n                        precision={0.5}\n                        onChange={(event, newValue) => {\n                          setFeedbackState({ ...feedbackState, value: newValue });\n                        }}\n                        onChangeActive={(event, newHover) => {\n                          setHover(newHover);\n                        }}\n                        disabled={isFeedbackGiven}\n                      />\n                    </div>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography component=\"h6\" variant=\"h6\" key=\"name\">\n                      {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\n                    </Typography>\n\n                  </Grid>\n                </Grid>\n              </div>\n\n              <Grid item xs={12}>\n                <div className={classes.textFieldStyling}>\n                  <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Additional Comments\"\n                    multiline\n                    rows={4}\n                    value={comments}\n                    variant=\"outlined\"\n                    name=\"comments\"\n                    onChange={onCommentsFieldChange}\n                    disabled={isFeedbackGiven}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} >\n                <div className={classes.buttonStyling}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={submitUserFeedback}\n                    disabled={isFeedbackGiven}\n                  >\n                    Submit Feedback\n                  </Button>\n                </div>\n              </Grid>\n            </Grid>\n          </Card>\n        </>\n      )}\n\n    </React.Fragment>\n  );\n}\nexport default RatingComponent;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { labels } from '../../services/constants';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n    border: \"1px solid #ddd\",\n    margin: \"10px 5px\",\n    boxShadow: \"none\",\n  },\n  cardDetails: {\n    flex: 1,\n    display: \"flex\",\n    textAlign: \"left\",\n    justifyContent: \"flex-start\",\n  },\n  cardMedia: {\n    width: 250,\n  },\n  cardAction: {\n    \"&hover\": {\n      backgroundColor: \"transparent\",\n    }\n  },\n  ratingValue: {\n    margin: '18px',\n    color: '#795548'\n  },\n  width: {\n    width: '350px',\n  }\n});\n\nconst FeedbackCard = props => {\n  const classes = useStyles();\n  const { feedback } = props;\n  const { stars, comments } = feedback;\n  return (\n    <Grid item>\n      <Card className={classes.card}>\n        <div className={classes.cardDetails}>\n          <CardContent>\n            <div className={classes.ratingValue}>\n              <Typography component=\"h2\" variant=\"h5\" >\n                {labels[stars]}\n              </Typography>\n            </div>\n            <div className={classes.width}>\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Additional Comments\"\n                multiline\n                rows={4}\n                value={comments}\n                variant=\"outlined\"\n                name=\"comments\"\n                disabled={true}\n              />\n            </div>\n          </CardContent>\n        </div>\n        {/* <Hidden xsDown>\n            <CardMedia\n              className={classes.cardMedia}\n              image=\"https://d1csarkz8obe9u.cloudfront.net/posterpreviews/zoom-background%2C-event%2Cpresentation-design-template-69f11bda0c4d7c9ccb155035a05493d9_screen.jpg?ts=1598358685\"\n              title={'Event Rating'}\n            />\n          </Hidden> */}\n      </Card>\n    </Grid>\n  );\n}\n\nexport default FeedbackCard;","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport MessageComponent from \"../MessageComponent\";\nimport { getFeedbacksForEvent } from '../../services/eventServices';\nimport FeedbackCard from './FeedbackCard';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    boxShadow: 'rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset'\n  },\n  root: {\n    margin: 'auto',\n  },\n  inline: {\n    display: 'inline',\n  },\n\n}));\n\n\nconst EventFeedbackList = props => {\n  const {eventId} = props;\n  const classes = useStyles();\n  const [feedbackList, setFeedbackList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n  \n\n  useEffect(()=>{\n    const getFeedbacks = async () => {\n      setLoading(true);\n      const response = await getFeedbacksForEvent(eventId);\n      if(response.status === 200){\n        setFeedbackList(response.data.data);\n        setLoading(false);\n      } \n      else if( response.status === 500){\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n        setLoading(false);\n      }\n    } \n    getFeedbacks(); // eslint-disable-next-line\n  },[])\n\n  return(\n    <div>\n    {loading ? (\n      <CircularProgress />\n    ) : (\n      <>\n      {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState}/>}\n      <div>\n      <Typography component=\"h2\" variant=\"h5\" >\n            Feedbacks\n        </Typography>\n        <Grid\n          key=\"outerGrid\"\n          className={classes.root}\n          container justify=\"center\"\n        >\n          {feedbackList.map((feedback) => {\n            return (\n              <Grid key={`innerGrid-${feedback['_id']}`} item xs={12} md={6}>\n                <div className={classes.grid_card}\n                  key={feedback['_id']}\n                >\n                    <FeedbackCard feedback={feedback}/>\n                </div>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </div>\n      </>\n    )}\n  </div>);\n};  \n\nexport default EventFeedbackList;","import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EventInfo from \"../components/event/EventInfo\";\nimport UserList from \"../components/user/UserList\";\nimport {\n  fetchEventDetails,\n  registerUser,\n  getEventStatus,\n} from \"../services/eventServices\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport EditSharpIcon from \"@material-ui/icons/EditSharp\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../components/auth/ProvideAuth\";\nimport { fetchResource } from \"../services/resourceServices\";\nimport { DB_URL } from \"../services/constants\";\nimport RatingComponent from \"../components/event/RatingComponent\";\nimport Card from \"@material-ui/core/Card\";\nimport MessageComponent from \"../components/MessageComponent\";\nimport EventFeedbackList from \"../components/event/EventFeedbackList\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  image: {\n    width: \"100%\",\n    height: \"300px\",\n  },\n  buttonGroup: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n  },\n  enrollButton: {\n    marginTop: \"5px\",\n    marginRight: \"5px\",\n    backgroundColor: \"purple\",\n  },\n  editButton: {\n    marginTop: \"5px\",\n    marginRight: \"5px\",\n    backgroundColor: \"darkorange\",\n    color: \"white\",\n    \"&:hover\": { color: \"black\", backgroundColor: \"orange\" },\n  },\n  rateEventButton: {\n    marginTop: \"5px\",\n    marginRight: \"5px\",\n    backgroundColor: \"darkred\",\n    color: \"white\",\n    \"&:hover\": { backgroundColor: \"red\" },\n  },\n  viewFeedbackButton: {\n    marginTop: \"5px\",\n    marginRight: \"5px\",\n    backgroundColor: \"purple\",\n    color: \"white\",\n    \"&:hover\": { backgroundColor: \"indigo\" },\n  },\n  memberSection: {\n    width: \"50%\",\n  },\n}));\n\nconst EventData = props => {\n  const contextValue = useContext(AuthContext);\n  let { id } = useParams();\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [eventState, setEventState] = useState();\n  const [loading, setLoading] = useState(true);\n  const [imagePath, setImagePath] = useState();\n  const [eventStatusState, setEventStatusState] = useState();\n  const [ratingComponentState, setRatingComponentState] = useState(false);\n  const [feedbackComponentState, setFeedbackComponentState] = useState(false);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const { user } = contextValue;\n\n  useEffect(() => {\n    getEventDetails();\n    // eslint-disable-next-line\n  }, [id]);\n\n  const registerUserToEvent = async () => {\n    const response = await registerUser(user[\"_id\"], eventState[\"_id\"]);\n    if (response.status === 200) {\n      setEventState(response.data.data);\n      setMessage(\"Registered in Event\");\n      setMessagePopupState(true);\n    } else if (response.status === 412) {\n      console.log(response.data.message);\n      setMessage(response.data.message);\n      setMessagePopupState(true);\n    } else if (response.status === 500) {\n      console.log(response.data.errors);\n      setMessage(\"Internal Server Error\");\n      setMessagePopupState(true);\n    }\n  };\n\n  const getEventDetails = async () => {\n    setLoading(true);\n    const response = await fetchEventDetails(id);\n    if (response.status === 200) {\n      setEventState(response.data.data);\n      setEventStatusState(\n        getEventStatus(response.data.data.from, response.data.data.to)\n      );\n      const { publicFiles } = response.data.data;\n      if (publicFiles.length > 0) {\n        const resourceResponse = await fetchResource(publicFiles[0][\"_id\"]);\n        if (resourceResponse.status === 200) {\n          const { path } = resourceResponse.data.data;\n          setImagePath(path);\n        } else if (resourceResponse.status === 500) {\n          console.log(resourceResponse.data.errors);\n          setMessage(\"Could not fetch File\");\n          setMessagePopupState(true);\n        }\n      }\n      setLoading(false);\n    } else if (response.message) {\n      setMessage(response.message);\n      setMessagePopupState(true);\n    } else {\n      console.log(response.errors);\n    }\n  };\n\n  const redirectToEventForm = () => {\n    history.push(`/event/new/${eventState.clubId}/${eventState[\"_id\"]}`);\n  };\n\n  const toggleRatingComponentState = () => {\n    setRatingComponentState(!ratingComponentState);\n  };\n\n  const toggleFeedbackComponentState = () => {\n    setFeedbackComponentState(!feedbackComponentState);\n  };\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <div>\n          {messagePopupState && (\n            <MessageComponent\n              open={messagePopupState}\n              messageContent={message}\n              setMessagePopupState={setMessagePopupState}\n            />\n          )}\n          {imagePath && (\n            <>\n              <img\n                className={classes.image}\n                src={`${DB_URL}/${imagePath}`}\n                alt=\"event\"\n              />\n              <br></br>\n              <br></br>\n            </>\n          )}\n          <Grid\n            container\n            justifyContent=\"center\"\n            spacing={5}\n            alignItems=\"center\"\n          >\n            <Grid key=\"club-info\" item xs={12}>\n              <EventInfo event={eventState} />\n            </Grid>\n          </Grid>\n          <Grid container item className={classes.buttonGroup}>\n            {!eventState.participants.includes(user[\"_id\"]) &&\n              user.role === \"participant\" &&\n              eventStatusState < 2 && (\n                <Button\n                  variant=\"contained\"\n                  className={classes.enrollButton}\n                  onClick={registerUserToEvent}\n                  startIcon={<AddCircleOutlineIcon />}\n                >\n                  Register\n                </Button>\n              )}\n            {user.role === \"admin\" && eventStatusState === -1 && (\n              <Button\n                variant=\"contained\"\n                className={classes.editButton}\n                onClick={redirectToEventForm}\n                startIcon={<EditSharpIcon />}\n              >\n                Edit\n              </Button>\n            )}\n            {user.role === \"participant\" && eventStatusState === 2 && (\n              <Button\n                variant=\"contained\"\n                className={classes.rateEventButton}\n                onClick={toggleRatingComponentState}\n                startIcon={<StarsIcon />}\n              >\n                Rate Event\n              </Button>\n            )}\n            {user.role === \"admin\" && eventStatusState === 2 && (\n              <Button\n                variant=\"contained\"\n                className={classes.viewFeedbackButton}\n                onClick={toggleFeedbackComponentState}\n                startIcon={<StarsIcon />}\n              >\n                View Feedbacks\n              </Button>\n            )}\n          </Grid>\n          {ratingComponentState && (\n            <>\n              <br></br>\n              <Card>\n                <Grid item container>\n                  <Grid item xs={12}>\n                    <RatingComponent eventId={eventState[\"_id\"]} />\n                  </Grid>\n                </Grid>\n              </Card>\n            </>\n          )}\n          <br></br>\n          <Grid\n            container\n            item\n            className={classes.memberSection}\n            justifyContent=\"start\"\n          >\n            <Grid item xs={12}>\n              <UserList ids={eventState.participants} titleText=\"Participants\" emptyText=\"Register Now!\" />\n            </Grid>\n          </Grid>\n\n          {feedbackComponentState && (\n            <>\n              <br></br>\n              <Card>\n                <Grid item container>\n                  <Grid item xs={12}>\n                    <EventFeedbackList eventId={eventState[\"_id\"]} />\n                  </Grid>\n                </Grid>\n              </Card>\n            </>\n          )}\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default EventData;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport EventCard from './EventCard';\nimport { useHistory } from 'react-router-dom';\nimport { fetchEventList } from \"../../services/eventServices\";\nimport { Button, CircularProgress } from '@material-ui/core';\nimport MessageComponent from \"../MessageComponent\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n    grid_card: {\n      padding: '10px'\n    }\n  }),\n);\n\nconst EventGrid = props => {\n  const styles = useStyles();\n  const { ids } = props;\n  const [eventList, setEventList] = useState(); //Array of user Objects\n  const [loading, setLoading] = useState(true);\n  const [messagePopupState, setMessagePopupState] = useState(false);\n  const [message, setMessage] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const response = await fetchEventList(ids || []);\n      if (response.status === 200) {\n        setEventList(response.data.data);\n        setLoading(false);\n      }\n      else if(response.status === 500){\n        console.log('Error', response.data.errors);\n        setMessage('Internal Server Error');\n        setMessagePopupState(true);\n      }\n    };\n    getData();\n  }, [ids]);\n\n  const redirectToEventData = id => {\n    history.push(`/event/${id}`)\n  }\n\n  return (\n    <div>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <>\n        {messagePopupState && <MessageComponent open={messagePopupState} messageContent={message} setMessagePopupState={setMessagePopupState}/>}\n        <div>\n          <Grid\n            key=\"outerGrid\"\n            className={styles.root}\n            container justify=\"center\"\n          >\n            {eventList.map((event) => {\n              return (\n                <Grid key={`innerGrid-${event['_id']}`} item xs={12} md={6}>\n                  <div className={styles.grid_card}\n                    key={event.id}\n                  >\n                    <Button\n                      onClick={() => { redirectToEventData(event['_id']) }}\n                    >\n                      <EventCard event={event} onClick={() => { redirectToEventData(event['_id']) }} />\n                    </Button>\n\n                  </div>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </div>\n        </>\n      )}\n    </div>\n    \n  );\n}\n\nexport default EventGrid;\n\n\n\n\n\n","import React, {useContext} from 'react';\nimport { AuthContext } from '../components/auth/ProvideAuth';\nimport EventGrid from '../components/event/EventGrid';\n\nconst UserEvents = props => {\n  const contextValue = useContext(AuthContext);\n  const { user } = contextValue;\n  const { registeredEvents } = user;\n  return(\n    <React.Fragment>\n      {registeredEvents.length>0 ?\n        (<EventGrid  ids={registeredEvents}/>) : \n        (<h4>You have no registered events!</h4>)\n      }\n         \n    </React.Fragment>\n  );\n}\n\nexport default UserEvents;","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SignUp from './pages/SignUp';\nimport Dashboard from './pages/Dashboard';\nimport SignIn from './pages/SignIn';\nimport ProvideAuth from './components/auth/ProvideAuth';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport ClubGrid from './pages/ClubGrid';\nimport ClubForm from './pages/ClubForm';\nimport ClubData from './pages/ClubData';\nimport EventForm from './pages/EventForm';\nimport EventData from './pages/EventData';\nimport UserEvents from './pages/UserEvents';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ProvideAuth>\n        <Router>\n          <Switch>\n            <Route\n              path='/signup'\n              exact\n              component={SignUp}>\n            </Route>\n            <Route\n              path='/signin'\n              exact\n              component={SignIn}>\n            </Route>\n            <PrivateRoute\n              path='/clubs'\n              exact\n              component={() => {\n                return (\n                  <Dashboard\n                    component={() => {\n                      return (<ClubGrid />)\n                    }} />\n                );\n              }}>\n            </PrivateRoute>\n            <PrivateRoute\n              path='/club/form/:id'\n              exact\n              component={() => {\n                return (\n                  <Dashboard\n                    component={() => {\n                      return (<ClubForm />)\n                    }} />\n                );\n              }}>\n            </PrivateRoute>\n            <PrivateRoute\n              path='/club/:id'\n              exact\n              component={() => {\n                return (\n                  <Dashboard\n                    component={() => {\n                      return (<ClubData />)\n                    }} />\n                );\n              }}>\n            </PrivateRoute>\n            <PrivateRoute\n              path='/event/new/:clubId/:eventId'\n              exact\n              component={() => {\n                return (\n                  <Dashboard\n                    component={() => {\n                      return (<EventForm />)\n                    }} />\n                );\n              }}>\n            </PrivateRoute>\n            <PrivateRoute\n              path='/event/:id'\n              exact\n              component={() => {\n                return (\n                  <Dashboard\n                    component={() => {\n                      return (<EventData />)\n                    }} />\n                );\n              }}>\n            </PrivateRoute>\n            <PrivateRoute\n              path='/user/events'\n              exact\n              component={() => {\n                return (\n                  <Dashboard\n                    component={() => {\n                      return (<UserEvents />)\n                    }} />\n                );\n              }}>\n            </PrivateRoute>\n          </Switch>\n        </Router>\n      </ProvideAuth>\n\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}